openapi: 3.0.0
info:
  title: Vulnerability Manager
  version: 1.0.0
  description: Manage DevSecOps Workflows
servers:
  - url: https://vulnmgr.securityuniversal.com
components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      description: See https://vulnmgr.securityuniversal.com/api/docs/v3/oauth2.html
      flows:
        clientCredentials:
          tokenUrl: https://vulnmgr.securityuniversal.com/oauth/token
          scopes:
            read:assetapplications: read assetapplications in your account
            write:assetapplications: modify assetapplications in your account
            read:assetdatabases: read assetdatabases in your account
            write:assetdatabases: modify assetdatabases in your account
            read:assetgroupasset: read assetgroupasset in your account
            write:assetgroupasset: modify assetgroupasset in your account
            read:assetgroups: read assetgroups in your account
            write:assetgroups: modify assetgroups in your account
            read:assetnetworkservices: read assetnetworkservices in your account
            write:assetnetworkservices: modify assetnetworkservices in your account
            read:businessapplications: read businessapplications in your account
            write:businessapplications: modify businessapplications in your account
            read:ipassets: read ipassets in your account
            write:ipassets: modify ipassets in your account
            read:networkservices: read networkservices in your account
            write:networkservices: modify networkservices in your account
            read:privatenetworks: read privatenetworks in your account
            write:privatenetworks: modify privatenetworks in your account
            read:sudatabases: read sudatabases in your account
            write:sudatabases: modify sudatabases in your account
            read:technologies: read technologies in your account
            write:technologies: modify technologies in your account
            read:dockerimages: read dockerimages in your account
            write:dockerimages: modify dockerimages in your account
            read:appcodecomposition: read appcodecomposition in your account
            write:appcodecomposition: modify appcodecomposition in your account
            read:buildartifacts: read buildartifacts in your account
            write:buildartifacts: modify buildartifacts in your account
            read:gitrepo: read gitrepo in your account
            write:gitrepo: modify gitrepo in your account
            read:importedcode: read importedcode in your account
            write:importedcode: modify importedcode in your account
            read:pullrequests: read pullrequests in your account
            write:pullrequests: modify pullrequests in your account
            read:releaseversions: read releaseversions in your account
            write:releaseversions: modify releaseversions in your account
            read:servicetickets: read servicetickets in your account
            write:servicetickets: modify servicestickets in your account
            read:sourcecodefile: read sourcecodefile in your account
            write:sourcecodefile: modify sourcecodefile in your account
            read:cvssbasescores: read cvssbasescores in your account
            write:cvssbasescores: modify cvssbasescores in your account
            read:cvssbasescoresv2: read cvssbasescoresv2 in your account
            write:cvssbasescoresv2: modify cvssbasescoresv2 in your account
            read:cvssbasescoresv2extensions: read cvssbasescoresv2extensions in your account
            write:cvssbasescoresv2extensions: modify cvssbasescoresv2extensions in your account
            read:cvssbasescoresv3: read cvssbasescoresv3 in your account
            write:cvssbasescoresv3: modify cvssbasescoresv3 in your account
            read:cvssbasescoresv3extensions: read cvssbasescoresv3extensions in your account
            write:cvssbasescoresv3extensions: modify cvssbasescoresv3extensions in your account
            read:pipelinejobs: read pipelinejobs in your account
            write:pipelinejobs: modify pipelinejobs in your account
            read:vulnerabilities: read vulnerabilities in your account
            write:vulnerabilities: modify vulnerabilities in your account
            read:vulnerabilityremediation: read vulnerabilityremediation in your account
            write:vulnerabilityremediation: modify vulnerabilityremediation in your account
            read:vulnerabilityscans: read vulnerabilityscans in your account
            write:vulnerabilityscans: modify vulnerabilityscans in your account
  schemas:
    Vulnerabilities:
      type: object
      properties:
        VulnerabilityID:
          type: integer
          format: int32
          description: The VulnerabilityID for the vulnerabilities.
        VulnerabilityName:
          type: string
          description: The VulnerabilityName for the vulnerabilities.
        CVEID:
          type: string
          description: The CVEID for the vulnerabilities.
        CWEID:
          type: string
          description: The CWEID for the vulnerabilities.
        Description:
          type: string
          description: The Description for the vulnerabilities.
        ReleaseDate:
          type: string
          format: date-time
          description: The ReleaseDate for the vulnerabilities.
        Severity:
          type: string
          description: The Severity for the vulnerabilities.
        Classification:
          type: string
          description: The Classification for the vulnerabilities.
        Source:
          type: string
          description: The Source for the vulnerabilities.
        LastModifiedDate:
          type: string
          format: date-time
          description: The LastModifiedDate for the vulnerabilities.
        ReferenceName:
          type: string
          description: The ReferenceName for the vulnerabilities.
        ReferenceUrl:
          type: string
          description: The ReferenceUrl for the vulnerabilities.
        ReferenceTags:
          type: string
          description: The ReferenceTags for the vulnerabilities.
        AddDate:
          type: string
          format: date-time
          description: The AddDate for the vulnerabilities.
        SourceCodeFileId:
          type: integer
          format: int32
          description: The SourceCodeFileId for the vulnerabilities.
        SourceCodeFileStartLine:
          type: integer
          format: int32
          description: The SourceCodeFileStartLine for the vulnerabilities.
        SourceCodeFileStartCol:
          type: integer
          format: int32
          description: The SourceCodeFileStartCol for the vulnerabilities.
        SourceCodeFileEndLine:
          type: integer
          format: int32
          description: The SourceCodeFileEndLine for the vulnerabilities.
        SourceCodeFileEndCol:
          type: integer
          format: int32
          description: The SourceCodeFileEndCol for the vulnerabilities.
        DockerImageId:
          type: integer
          format: int32
          description: The DockerImageId for the vulnerabilities.
        ApplicationId:
          type: integer
          format: int32
          description: The ApplicationId for the vulnerabilities.
        HostId:
          type: integer
          format: int32
          description: The HostId for the vulnerabilities.
        Uri:
          type: string
          description: The Uri for the vulnerabilities.
        HtmlMethod:
          type: string
          description: The HtmlMethod for the vulnerabilities.
        Param:
          type: string
          description: The Param for the vulnerabilities.
        Attack:
          type: string
          description: The Attack for the vulnerabilities.
        Evidence:
          type: string
          description: The Evidence for the vulnerabilities.
        Solution:
          type: string
          description: The Solution for the vulnerabilities.
        VulnerablePackage:
          type: string
          description: The VulnerablePackage for the vulnerabilities.
        VulnerableFileName:
          type: string
          description: The VulnerableFileName for the vulnerabilities.
        VulnerableFilePath:
          type: string
          description: The VulnerableFilePath for the vulnerabilities.
        MitigationDate:
          type: string
          format: date-time
          description: The MitigationDate for the vulnerabilities.
        Status:
          type: string
          description: The Status for the vulnerabilities.
        ScanId:
          type: integer
          format: int32
          description: The ScanId for the vulnerabilities.
        InitialScanId:
          type: integer
          format: int32
          description: The InitialScanId for the vulnerabilities.
    AssetApplications:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the assetapplications.
        TechnologyID:
          type: integer
          format: int32
          description: The TechnologyID for the assetapplications.
        ApplicationID:
          type: integer
          format: int32
          description: The ApplicationID for the assetapplications.
    AssetDatabases:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the assetdatabases.
        TechnologyID:
          type: integer
          format: int32
          description: The TechnologyID for the assetdatabases.
        DatabaseID:
          type: integer
          format: int32
          description: The DatabaseID for the assetdatabases.
    AssetGroups:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the assetgroups.
        AssetGroupName:
          type: string
          description: The AssetGroupName for the assetgroups.
        AssetGroupDesc:
          type: string
          description: The AssetGroupDesc for the assetgroups.
        RegDate:
          type: string
          format: date-time
          description: The RegDate for the assetgroups.
    AssetGroupAsset:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the assetgroupasset.
        AssetGroupID:
          type: integer
          format: int32
          description: The AssetGroupID for the assetgroupasset.
        TechnologyID:
          type: integer
          format: int32
          description: The TechnologyID for the assetgroupasset.
    NetworkServices:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the networkservices.
        Name:
          type: string
          description: The Name for the networkservices.
        Port:
          type: string
          description: The Port for the networkservices.
        Product:
          type: string
          description: The Product for the networkservices.
        Protocol:
          type: string
          description: The Protocol for the networkservices.
        Vendor:
          type: string
          description: The Vendor for the networkservices.
        Version:
          type: string
          description: The Version for the networkservices.
        RegDate:
          type: string
          format: date-time
          description: The RegDate for the networkservices.
    AssetNetworkServices:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the assetnetworkservices.
        AssetID:
          type: integer
          format: int32
          description: The AssetID for the assetnetworkservices.
        ServiceID:
          type: integer
          format: int32
          description: The ServiceID for the assetnetworkservices.
    PipelineJobs:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the pipelinejobs.
        StartDate:
          type: string
          format: date-time
          description: The StartDate for the pipelinejobs.
        Status:
          type: string
          description: The Status for the pipelinejobs.
        Source:
          type: string
          description: The Source for the pipelinejobs.
        SourceJobId:
          type: integer
          format: int32
          description: The SourceJobId for the pipelinejobs.
        ApplicationId:
          type: integer
          format: int32
          description: The ApplicationId for the pipelinejobs.
        BranchName:
          type: string
          description: The BranchName for the pipelinejobs.
        BuildNum:
          type: string
          description: The BuildNum for the pipelinejobs.
        JobName:
          type: string
          description: The JobName for the pipelinejobs.
        Project:
          type: string
          description: The Project for the pipelinejobs.
        Node:
          type: string
          description: The Node for the pipelinejobs.
        NodeAssetId:
          type: integer
          format: int32
          description: The NodeAssetId for the pipelinejobs.
        GitCommit:
          type: string
          description: The GitCommit for the pipelinejobs.
        GitBranch:
          type: string
          description: The GitBranch for the pipelinejobs.
        GitUrl:
          type: string
          description: The GitUrl for the pipelinejobs.
        NodeIp:
          type: string
          description: The NodeIp for the pipelinejobs.
    BusinessApplications:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the businessapplications.
        TechnologyID:
          type: integer
          format: int32
          description: The TechnologyID for the businessapplications.
        ApplicationName:
          type: string
          description: The ApplicationName for the businessapplications.
        Version:
          type: string
          description: The Version for the businessapplications.
        Vendor:
          type: string
          description: The Vendor for the businessapplications.
        Language:
          type: string
          description: The Language for the businessapplications.
        InHouseDev:
          type: integer
          format: int32
          description: The InHouseDev for the businessapplications.
        VendorDev:
          type: integer
          format: int32
          description: The VendorDev for the businessapplications.
        Customization:
          type: integer
          format: int32
          description: The Customization for the businessapplications.
        DatabaseName:
          type: string
          description: The DatabaseName for the businessapplications.
        AppValue:
          type: string
          description: The AppValue for the businessapplications.
        Owner:
          type: string
          description: The Owner for the businessapplications.
        Custodian:
          type: string
          description: The Custodian for the businessapplications.
        Hosting:
          type: string
          description: The Hosting for the businessapplications.
        Description:
          type: string
          description: The Description for the businessapplications.
        PHI:
          type: string
          description: The PHI for the businessapplications.
        PII:
          type: string
          description: The PII for the businessapplications.
        PCI:
          type: string
          description: The PCI for the businessapplications.
        MiscCustomerData:
          type: string
          description: The MiscCustomerData for the businessapplications.
        Type:
          type: string
          description: The Type for the businessapplications.
        RegDate:
          type: string
          format: date-time
          description: The RegDate for the businessapplications.
        Edition:
          type: string
          description: The Edition for the businessapplications.
        WebEnabled:
          type: string
          description: The WebEnabled for the businessapplications.
        ApplicationURL:
          type: string
          description: The ApplicationURL for the businessapplications.
        RepoURL:
          type: string
          description: The RepoURL for the businessapplications.
        ApplicationType:
          type: string
          description: The ApplicationType for the businessapplications.
        ProductType:
          type: string
          description: The ProductType for the businessapplications.
        Lifecycle:
          type: string
          description: The Lifecycle for the businessapplications.
        Origin:
          type: string
          description: The Origin for the businessapplications.
        UserRecords:
          type: string
          description: The UserRecords for the businessapplications.
        Revenue:
          type: string
          description: The Revenue for the businessapplications.
        SysgenID:
          type: string
          description: The SysgenID for the businessapplications.
        ApplicationAcronym:
          type: string
          description: The ApplicationAcronym for the businessapplications.
        LctlAppID:
          type: string
          description: The LctlAppID for the businessapplications.
        Assignment:
          type: string
          description: The Assignment for the businessapplications.
        AssignmentChangedDate:
          type: string
          format: date-time
          description: The AssignmentChangedDate for the businessapplications.
        LifecycleStatus:
          type: string
          description: The LifecycleStatus for the businessapplications.
        Disposition:
          type: string
          description: The Disposition for the businessapplications.
        TAWG:
          type: string
          description: The TAWG for the businessapplications.
        Criticality:
          type: string
          description: The Criticality for the businessapplications.
        PrioritizedForStability:
          type: string
          description: The PrioritizedForStability for the businessapplications.
        BiaCritical:
          type: string
          description: The BiaCritical for the businessapplications.
        SoxCritical:
          type: string
          description: The SoxCritical for the businessapplications.
        Region:
          type: string
          description: The Region for the businessapplications.
        HostingPlatform:
          type: string
          description: The HostingPlatform for the businessapplications.
        PrimaryLob:
          type: string
          description: The PrimaryLob for the businessapplications.
        UsedByMultipleLob:
          type: string
          description: The UsedByMultipleLob for the businessapplications.
        MalListingAddDate:
          type: string
          format: date-time
          description: The MalListingAddDate for the businessapplications.
        PreprodDate:
          type: string
          format: date-time
          description: The PreprodDate for the businessapplications.
        ProductionDate:
          type: string
          format: date-time
          description: The ProductionDate for the businessapplications.
        RetirementDate:
          type: string
          format: date-time
          description: The RetirementDate for the businessapplications.
        TargetRetirementDate:
          type: string
          format: date-time
          description: The TargetRetirementDate for the businessapplications.
        AppSupportType:
          type: string
          description: The AppSupportType for the businessapplications.
        BusinessImpactDesc:
          type: string
          description: The BusinessImpactDesc for the businessapplications.
        WorkaroundDesc:
          type: string
          description: The WorkaroundDesc for the businessapplications.
        AssetSystem:
          type: string
          description: The AssetSystem for the businessapplications.
        LogicalAccessControlUrl:
          type: string
          description: The LogicalAccessControlUrl for the businessapplications.
        MalAddReason:
          type: string
          description: The MalAddReason for the businessapplications.
        MalAddReasonDetails:
          type: string
          description: The MalAddReasonDetails for the businessapplications.
        SupportEngApprReq:
          type: string
          description: The SupportEngApprReq for the businessapplications.
        QaActivelyTested:
          type: string
          description: The QaActivelyTested for the businessapplications.
        PrimaryProdUrl:
          type: string
          description: The PrimaryProdUrl for the businessapplications.
        AppMetricCat:
          type: string
          description: The AppMetricCat for the businessapplications.
        OfficialBusinessRecord:
          type: string
          description: The OfficialBusinessRecord for the businessapplications.
        RetentionPeriod:
          type: string
          description: The RetentionPeriod for the businessapplications.
        SubjectToLegalHold:
          type: string
          description: The SubjectToLegalHold for the businessapplications.
        EmployeeData:
          type: string
          description: The EmployeeData for the businessapplications.
        UserAccessRestrictions:
          type: string
          description: The UserAccessRestrictions for the businessapplications.
        UserAccessControl:
          type: string
          description: The UserAccessControl for the businessapplications.
        PMUCNUSGOVT:
          type: string
          description: The PMUCNUSGOVT for the businessapplications.
        RopaExists:
          type: string
          description: The RopaExists for the businessapplications.
        AccountProvisionAndDeprovision:
          type: string
          description: The AccountProvisionAndDeprovision for the businessapplications.
        AccountProvisionSupportGrp:
          type: string
          description: The AccountProvisionSupportGrp for the businessapplications.
        CicdStatus:
          type: string
          description: The CicdStatus for the businessapplications.
    IPAssets:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the ipassets.
        TechnologyID:
          type: integer
          format: int32
          description: The TechnologyID for the ipassets.
        IPAddress:
          type: string
          description: The IPAddress for the ipassets.
        MacAddress:
          type: string
          description: The MacAddress for the ipassets.
        Type:
          type: string
          description: The Type for the ipassets.
        EntityID:
          type: string
          description: The EntityID for the ipassets.
        Hostname:
          type: string
          description: The Hostname for the ipassets.
        OS:
          type: string
          description: The OS for the ipassets.
        OSArchitecture:
          type: string
          description: The OSArchitecture for the ipassets.
        OSFamily:
          type: string
          description: The OSFamily for the ipassets.
        OSID:
          type: string
          description: The OSID for the ipassets.
        OSProduct:
          type: string
          description: The OSProduct for the ipassets.
        OSSystemName:
          type: string
          description: The OSSystemName for the ipassets.
        OSType:
          type: string
          description: The OSType for the ipassets.
        OSVendor:
          type: string
          description: The OSVendor for the ipassets.
        OSVersion:
          type: string
          description: The OSVersion for the ipassets.
        Description:
          type: string
          description: The Description for the ipassets.
        Domain:
          type: string
          description: The Domain for the ipassets.
        Location:
          type: string
          description: The Location for the ipassets.
        Active:
          type: string
          description: The Active for the ipassets.
        RegComplete:
          type: string
          description: The RegComplete for the ipassets.
        RegDate:
          type: string
          format: date-time
          description: The RegDate for the ipassets.
        SubnetID:
          type: integer
          format: int32
          description: The SubnetID for the ipassets.
        Authorized:
          type: integer
          format: int32
          description: The Authorized for the ipassets.
        OSUpdate:
          type: string
          description: The OSUpdate for the ipassets.
        OSEdition:
          type: string
          description: The OSEdition for the ipassets.
        OSCPE:
          type: string
          description: The OSCPE for the ipassets.
        MacVendor:
          type: string
          description: The MacVendor for the ipassets.
        ServerName:
          type: string
          description: The ServerName for the ipassets.
        ComponentID:
          type: string
          description: The ComponentID for the ipassets.
        Assignment:
          type: string
          description: The Assignment for the ipassets.
        Status:
          type: string
          description: The Status for the ipassets.
        AssetTag:
          type: string
          description: The AssetTag for the ipassets.
        SerialNumber:
          type: string
          description: The SerialNumber for the ipassets.
        Brand:
          type: string
          description: The Brand for the ipassets.
        Model:
          type: string
          description: The Model for the ipassets.
        ModelCategory:
          type: string
          description: The ModelCategory for the ipassets.
        AbbreviatedModel:
          type: string
          description: The AbbreviatedModel for the ipassets.
        CPUsPhysical:
          type: integer
          format: int32
          description: The CPUsPhysical for the ipassets.
        CPUsCores:
          type: integer
          format: int32
          description: The CPUsCores for the ipassets.
        CPUsHWThreads:
          type: integer
          format: int32
          description: The CPUsHWThreads for the ipassets.
        SupportGroup:
          type: string
          description: The SupportGroup for the ipassets.
        LocationCode:
          type: string
          description: The LocationCode for the ipassets.
        AssetSystem:
          type: string
          description: The AssetSystem for the ipassets.
    PrivateNetworks:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the privatenetworks.
        Name:
          type: string
          description: The Name for the privatenetworks.
        CIDR:
          type: string
          description: The CIDR for the privatenetworks.
        SubnetMask:
          type: string
          description: The SubnetMask for the privatenetworks.
        Description:
          type: string
          description: The Description for the privatenetworks.
        RegDate:
          type: string
          format: date-time
          description: The RegDate for the privatenetworks.
        PHI:
          type: integer
          format: int32
          description: The PHI for the privatenetworks.
        PII:
          type: integer
          format: int32
          description: The PII for the privatenetworks.
        PCI:
          type: integer
          format: int32
          description: The PCI for the privatenetworks.
        MiscCustomerData:
          type: integer
          format: int32
          description: The MiscCustomerData for the privatenetworks.
    Databases:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the databases.
        TechnologyID:
          type: integer
          format: int32
          description: The TechnologyID for the databases.
        DatabaseName:
          type: string
          description: The DatabaseName for the databases.
        Vendor:
          type: string
          description: The Vendor for the databases.
        DatabaseValue:
          type: string
          description: The DatabaseValue for the databases.
        Owner:
          type: string
          description: The Owner for the databases.
        Custodian:
          type: string
          description: The Custodian for the databases.
        Hosting:
          type: string
          description: The Hosting for the databases.
        Description:
          type: string
          description: The Description for the databases.
        PHI:
          type: string
          description: The PHI for the databases.
        PII:
          type: string
          description: The PII for the databases.
        PCI:
          type: string
          description: The PCI for the databases.
        MiscCustomerData:
          type: string
          description: The MiscCustomerData for the databases.
        HostSystem:
          type: string
          description: The HostSystem for the databases.
        RegDate:
          type: string
          format: date-time
          description: The RegDate for the databases.
        NetworkConnector:
          type: string
          description: The NetworkConnector for the databases.
        DatabaseHostname:
          type: string
          description: The DatabaseHostname for the databases.
        Assignment:
          type: string
          description: The Assignment for the databases.
        AssignmentChanged:
          type: string
          format: date-time
          description: The AssignmentChanged for the databases.
        Status:
          type: string
          description: The Status for the databases.
        AssetTag:
          type: string
          description: The AssetTag for the databases.
        DbInstanceName:
          type: string
          description: The DbInstanceName for the databases.
        DbServiceName:
          type: string
          description: The DbServiceName for the databases.
        DbType:
          type: string
          description: The DbType for the databases.
        DbVersion:
          type: string
          description: The DbVersion for the databases.
        FNMSDiscoveredVer:
          type: string
          description: The FNMSDiscoveredVer for the databases.
        DbPatchInstall:
          type: string
          description: The DbPatchInstall for the databases.
        DbPatchLevel:
          type: string
          description: The DbPatchLevel for the databases.
        ServersDbInstalledOn:
          type: string
          description: The ServersDbInstalledOn for the databases.
        MalAppsOwningDb:
          type: string
          description: The MalAppsOwningDb for the databases.
        HighestCriticality:
          type: string
          description: The HighestCriticality for the databases.
        RoadmapCompliance:
          type: string
          description: The RoadmapCompliance for the databases.
        AssetSystem:
          type: string
          description: The AssetSystem for the databases.
        SupportabilityLevelDb:
          type: string
          description: The SupportabilityLevelDb for the databases.
        SupportabilityLevelDbEoslDate:
          type: string
          format: date-time
          description: The SupportabilityLevelDbEoslDate for the databases.
    Technologies:
      type: object
      properties:
        TechnologyID:
          type: integer
          format: int32
          description: The TechnologyID for the technologies.
        Name:
          type: string
          description: The Name for the technologies.
        Part:
          type: string
          description: The Part for the technologies.
        Vendor:
          type: string
          description: The Vendor for the technologies.
        Product:
          type: string
          description: The Product for the technologies.
        Version:
          type: string
          description: The Version for the technologies.
        UpdateVer:
          type: string
          description: The UpdateVer for the technologies.
        Edition:
          type: string
          description: The Edition for the technologies.
        Language:
          type: string
          description: The Language for the technologies.
        TechnologyValue:
          type: string
          description: The TechnologyValue for the technologies.
        BusinessUnit:
          type: string
          description: The BusinessUnit for the technologies.
        Owner:
          type: string
          description: The Owner for the technologies.
        Custodian:
          type: string
          description: The Custodian for the technologies.
        Classification:
          type: string
          description: The Classification for the technologies.
        UniqueID:
          type: string
          description: The UniqueID for the technologies.
        UniqueIDType:
          type: string
          description: The UniqueIDType for the technologies.
        Description:
          type: string
          description: The Description for the technologies.
        RegComplete:
          type: string
          description: The RegComplete for the technologies.
        RegDate:
          type: string
          format: date-time
          description: The RegDate for the technologies.
    DockerImages:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the dockerimages.
        AddDate:
          type: string
          format: date-time
          description: The AddDate for the dockerimages.
        ImageName:
          type: string
          description: The ImageName for the dockerimages.
        ImageTag:
          type: string
          description: The ImageTag for the dockerimages.
        ImageId:
          type: string
          description: The ImageId for the dockerimages.
        AppIdList:
          type: string
          description: The AppIdList for the dockerimages.
    AppCodeComposition:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the appcodecomposition.
        AddDate:
          type: string
          format: date-time
          description: The AddDate for the appcodecomposition.
        ApplicationID:
          type: integer
          format: int32
          description: The ApplicationID for the appcodecomposition.
        JavaFiles:
          type: integer
          format: int32
          description: The JavaFiles for the appcodecomposition.
        JavaLoc:
          type: integer
          format: int32
          description: The JavaLoc for the appcodecomposition.
        XmlFiles:
          type: integer
          format: int32
          description: The XmlFiles for the appcodecomposition.
        XmlLoc:
          type: integer
          format: int32
          description: The XmlLoc for the appcodecomposition.
        JsonFiles:
          type: integer
          format: int32
          description: The JsonFiles for the appcodecomposition.
        JsonLoc:
          type: integer
          format: int32
          description: The JsonLoc for the appcodecomposition.
        YamlFiles:
          type: integer
          format: int32
          description: The YamlFiles for the appcodecomposition.
        YamlLoc:
          type: integer
          format: int32
          description: The YamlLoc for the appcodecomposition.
        ConfFiles:
          type: integer
          format: int32
          description: The ConfFiles for the appcodecomposition.
        ConfLoc:
          type: integer
          format: int32
          description: The ConfLoc for the appcodecomposition.
        PythonFiles:
          type: integer
          format: int32
          description: The PythonFiles for the appcodecomposition.
        PythonLoc:
          type: integer
          format: int32
          description: The PythonLoc for the appcodecomposition.
        PerlFiles:
          type: integer
          format: int32
          description: The PerlFiles for the appcodecomposition.
        PerlLoc:
          type: integer
          format: int32
          description: The PerlLoc for the appcodecomposition.
        CFiles:
          type: integer
          format: int32
          description: The CFiles for the appcodecomposition.
        CLoc:
          type: integer
          format: int32
          description: The CLoc for the appcodecomposition.
        GoFiles:
          type: integer
          format: int32
          description: The GoFiles for the appcodecomposition.
        GoLoc:
          type: integer
          format: int32
          description: The GoLoc for the appcodecomposition.
        JavascriptFiles:
          type: integer
          format: int32
          description: The JavascriptFiles for the appcodecomposition.
        JavascriptLoc:
          type: integer
          format: int32
          description: The JavascriptLoc for the appcodecomposition.
    BuildArtifacts:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the buildartifacts.
        AddDate:
          type: string
          format: date-time
          description: The AddDate for the buildartifacts.
        PipelineJobID:
          type: integer
          format: int32
          description: The PipelineJobID for the buildartifacts.
        ArtifactName:
          type: string
          description: The ArtifactName for the buildartifacts.
        Url:
          type: string
          description: The Url for the buildartifacts.
    GitRepo:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the gitrepo.
        AddDate:
          type: string
          format: date-time
          description: The AddDate for the gitrepo.
        Source:
          type: string
          description: The Source for the gitrepo.
        RepoName:
          type: string
          description: The RepoName for the gitrepo.
        RepoUrl:
          type: string
          description: The RepoUrl for the gitrepo.
        ApplicationID:
          type: integer
          format: int32
          description: The ApplicationID for the gitrepo.
    ImportedCode:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the importedcode.
        AddDate:
          type: string
          format: date-time
          description: The AddDate for the importedcode.
        ApplicationID:
          type: integer
          format: int32
          description: The ApplicationID for the importedcode.
        PackageName:
          type: string
          description: The PackageName for the importedcode.
        PackageVersion:
          type: string
          description: The PackageVersion for the importedcode.
        ImportMethod:
          type: string
          description: The ImportMethod for the importedcode.
        ImportFile:
          type: string
          description: The ImportFile for the importedcode.
        Status:
          type: string
          description: The Status for the importedcode.
    VulnerabilityScans:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the vulnerabilityscans.
        ScanName:
          type: string
          description: The ScanName for the vulnerabilityscans.
        ScanType:
          type: string
          description: The ScanType for the vulnerabilityscans.
        ScanTargets:
          type: string
          description: The ScanTargets for the vulnerabilityscans.
        ScanStartDate:
          type: string
          format: date-time
          description: The ScanStartDate for the vulnerabilityscans.
        ScanEndDate:
          type: string
          format: date-time
          description: The ScanEndDate for the vulnerabilityscans.
        IntegrationID:
          type: integer
          format: int32
          description: The IntegrationID for the vulnerabilityscans.
        ApplicationId:
          type: integer
          format: int32
          description: The ApplicationId for the vulnerabilityscans.
    VulnerabilityRemediation:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the vulnerabilityremediation.
        VulnerabilityID:
          type: integer
          format: int32
          description: The VulnerabilityID for the vulnerabilityremediation.
        TechnologyID:
          type: integer
          format: int32
          description: The TechnologyID for the vulnerabilityremediation.
        OpenDate:
          type: string
          format: date-time
          description: The OpenDate for the vulnerabilityremediation.
        Status:
          type: string
          description: The Status for the vulnerabilityremediation.
        Priority:
          type: string
          description: The Priority for the vulnerabilityremediation.
        CloseDate:
          type: string
          format: date-time
          description: The CloseDate for the vulnerabilityremediation.
        ClosedBy:
          type: string
          description: The ClosedBy for the vulnerabilityremediation.
    CVSSBaseScores:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the cvssbasescores.
        VulnerabilityID:
          type: integer
          format: int32
          description: The VulnerabilityID for the cvssbasescores.
        GeneratedOn:
          type: string
          format: date-time
          description: The GeneratedOn for the cvssbasescores.
        OverallCVSSScore:
          type: number
          format: float
          description: The OverallCVSSScore for the cvssbasescores.
        CVSSBaseScore:
          type: number
          format: float
          description: The CVSSBaseScore for the cvssbasescores.
        CVSSTemporalScore:
          type: number
          format: float
          description: The CVSSTemporalScore for the cvssbasescores.
        CVSSEnvironmentalScore:
          type: number
          format: float
          description: The CVSSEnvironmentalScore for the cvssbasescores.
        AccessVector:
          type: string
          description: The AccessVector for the cvssbasescores.
        AccessComplexity:
          type: string
          description: The AccessComplexity for the cvssbasescores.
        Authentication:
          type: string
          description: The Authentication for the cvssbasescores.
        ConfidentialityImpact:
          type: string
          description: The ConfidentialityImpact for the cvssbasescores.
        IntegrityImpact:
          type: string
          description: The IntegrityImpact for the cvssbasescores.
        AvailabilityImpact:
          type: string
          description: The AvailabilityImpact for the cvssbasescores.
        ImpactBias:
          type: string
          description: The ImpactBias for the cvssbasescores.
        CollateralDamagePotential:
          type: string
          description: The CollateralDamagePotential for the cvssbasescores.
        TargetDistribution:
          type: string
          description: The TargetDistribution for the cvssbasescores.
        Exploitability:
          type: string
          description: The Exploitability for the cvssbasescores.
        RemediationLevel:
          type: string
          description: The RemediationLevel for the cvssbasescores.
        ReportConfidence:
          type: string
          description: The ReportConfidence for the cvssbasescores.
    CVSSBaseScoresV2:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the cvssbasescoresv2.
        VulnerabilityID:
          type: integer
          format: int32
          description: The VulnerabilityID for the cvssbasescoresv2.
        cvssV2vectorString:
          type: string
          description: The cvssV2vectorString for the cvssbasescoresv2.
        cvssV2accessVector:
          type: string
          description: The cvssV2accessVector for the cvssbasescoresv2.
        cvssV2accessComplexity:
          type: string
          description: The cvssV2accessComplexity for the cvssbasescoresv2.
        cvssV2authentication:
          type: string
          description: The cvssV2authentication for the cvssbasescoresv2.
        cvssV2confidentialityImpact:
          type: string
          description: The cvssV2confidentialityImpact for the cvssbasescoresv2.
        cvssV2integrityImpact:
          type: string
          description: The cvssV2integrityImpact for the cvssbasescoresv2.
        cvssV2availabilityImpact:
          type: number
          format: float
          description: The cvssV2availabilityImpact for the cvssbasescoresv2.
        cvssV2baseScore:
          type: number
          format: float
          description: The cvssV2baseScore for the cvssbasescoresv2.
        cvssV2severity:
          type: string
          description: The cvssV2severity for the cvssbasescoresv2.
        cvssV2exploitabilityScore:
          type: number
          format: float
          description: The cvssV2exploitabilityScore for the cvssbasescoresv2.
        cvssV2impactScore:
          type: number
          format: float
          description: The cvssV2impactScore for the cvssbasescoresv2.
        cvssV2acInsufInfo:
          type: string
          description: The cvssV2acInsufInfo for the cvssbasescoresv2.
        cvssV2obtainAllPrivilege:
          type: string
          description: The cvssV2obtainAllPrivilege for the cvssbasescoresv2.
        cvssV2obtainUserPrivilege:
          type: string
          description: The cvssV2obtainUserPrivilege for the cvssbasescoresv2.
        cvssV2obtainOtherPrivilege:
          type: string
          description: The cvssV2obtainOtherPrivilege for the cvssbasescoresv2.
        cvssV2userInteractionRequired:
          type: string
          description: The cvssV2userInteractionRequired for the cvssbasescoresv2.
    CVSSBaseScoresV2Extensions:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the cvssbasescoresv2extensions.
        VulnerabilityID:
          type: integer
          format: int32
          description: The VulnerabilityID for the cvssbasescoresv2extensions.
        TechnologyID:
          type: integer
          format: int32
          description: The TechnologyID for the cvssbasescoresv2extensions.
        cvssV2remediationLevel:
          type: string
          description: The cvssV2remediationLevel for the cvssbasescoresv2extensions.
        cvssV2reportConfidence:
          type: string
          description: The cvssV2reportConfidence for the cvssbasescoresv2extensions.
        cvssV2temporalScore:
          type: number
          format: float
          description: The cvssV2temporalScore for the cvssbasescoresv2extensions.
        cvssV2collateralDamagePotential:
          type: string
          description: The cvssV2collateralDamagePotential for the cvssbasescoresv2extensions.
        cvssV2targetDistribution:
          type: string
          description: The cvssV2targetDistribution for the cvssbasescoresv2extensions.
        cvssV2confidentialityRequirements:
          type: string
          description: The cvssV2confidentialityRequirements for the cvssbasescoresv2extensions.
        cvssV2integrityRequirements:
          type: string
          description: The cvssV2integrityRequirements for the cvssbasescoresv2extensions.
        cvssV2availabilityRequirements:
          type: string
          description: The cvssV2availabilityRequirements for the cvssbasescoresv2extensions.
        cvssV2environmentalScore:
          type: number
          format: float
          description: The cvssV2environmentalScore for the cvssbasescoresv2extensions.
        cvssV2adjustedTemporalScore:
          type: number
          format: float
          description: The cvssV2adjustedTemporalScore for the cvssbasescoresv2extensions.
        cvssV2adjustedImpactScore:
          type: number
          format: float
          description: The cvssV2adjustedImpactScore for the cvssbasescoresv2extensions.
    CVSSBaseScoresV3Extensions:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the cvssbasescoresv3extensions.
        VulnerabilityID:
          type: integer
          format: int32
          description: The VulnerabilityID for the cvssbasescoresv3extensions.
        TechnologyID:
          type: integer
          format: int32
          description: The TechnologyID for the cvssbasescoresv3extensions.
        cvssV3exploitCodeMaturity:
          type: string
          description: The cvssV3exploitCodeMaturity for the cvssbasescoresv3extensions.
        cvssV3remediationLevel:
          type: string
          description: The cvssV3remediationLevel for the cvssbasescoresv3extensions.
        cvssV3reportConfidence:
          type: string
          description: The cvssV3reportConfidence for the cvssbasescoresv3extensions.
        cvssV3confidentialityRequirements:
          type: string
          description: The cvssV3confidentialityRequirements for the cvssbasescoresv3extensions.
        cvssV3integrityRequirements:
          type: string
          description: The cvssV3integrityRequirements for the cvssbasescoresv3extensions.
        cvssV3availabilityRequirements:
          type: string
          description: The cvssV3availabilityRequirements for the cvssbasescoresv3extensions.
        cvssV3temporalScore:
          type: number
          format: float
          description: The cvssV3temporalScore for the cvssbasescoresv3extensions.
        cvssV3environmentalScore:
          type: number
          format: float
          description: The cvssV3environmentalScore for the cvssbasescoresv3extensions.
        cvssV3impactScore:
          type: number
          format: float
          description: The cvssV3impactScore for the cvssbasescoresv3extensions.
    CVSSBaseScoresV3:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the cvssbasescoresv3.
        VulnerabilityID:
          type: integer
          format: int32
          description: The VulnerabilityID for the cvssbasescoresv3.
        cvssV3vectorString:
          type: string
          description: The cvssV3vectorString for the cvssbasescoresv3.
        cvssV3attackVector:
          type: string
          description: The cvssV3attackVector for the cvssbasescoresv3.
        cvssV3attackComplexity:
          type: string
          description: The cvssV3attackComplexity for the cvssbasescoresv3.
        cvssV3privilegesRequired:
          type: string
          description: The cvssV3privilegesRequired for the cvssbasescoresv3.
        cvssV3userInteraction:
          type: string
          description: The cvssV3userInteraction for the cvssbasescoresv3.
        cvssV3scope:
          type: string
          description: The cvssV3scope for the cvssbasescoresv3.
        cvssV3confidentialityImpact:
          type: string
          description: The cvssV3confidentialityImpact for the cvssbasescoresv3.
        cvssV3integrityImpact:
          type: string
          description: The cvssV3integrityImpact for the cvssbasescoresv3.
        cvssV3availabilityImpact:
          type: string
          description: The cvssV3availabilityImpact for the cvssbasescoresv3.
        cvssV3baseScore:
          type: number
          format: float
          description: The cvssV3baseScore for the cvssbasescoresv3.
        cvssV3baseSeverity:
          type: string
          description: The cvssV3baseSeverity for the cvssbasescoresv3.
        cvssV3exploitabilityScore:
          type: number
          format: float
          description: The cvssV3exploitabilityScore for the cvssbasescoresv3.
        cvssV3impactScore:
          type: number
          format: float
          description: The cvssV3impactScore for the cvssbasescoresv3.
    SourceCodeFile:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the sourcecodefile.
        AddDate:
          type: string
          format: date-time
          description: The AddDate for the sourcecodefile.
        GitRepoId:
          type: integer
          format: int32
          description: The GitRepoId for the sourcecodefile.
        FileName:
          type: string
          description: The FileName for the sourcecodefile.
        FileLocation:
          type: string
          description: The FileLocation for the sourcecodefile.
        FileType:
          type: string
          description: The FileType for the sourcecodefile.
    ServiceTickets:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the servicetickets.
        AddDate:
          type: string
          format: date-time
          description: The AddDate for the servicetickets.
        ReleaseID:
          type: integer
          format: int32
          description: The ReleaseID for the servicetickets.
        TicketName:
          type: string
          description: The TicketName for the servicetickets.
        Description:
          type: string
          description: The Description for the servicetickets.
        Source:
          type: string
          description: The Source for the servicetickets.
        SourceID:
          type: integer
          format: int32
          description: The SourceID for the servicetickets.
        Reporter:
          type: string
          description: The Reporter for the servicetickets.
        Assignee:
          type: string
          description: The Assignee for the servicetickets.
        Status:
          type: string
          description: The Status for the servicetickets.
    ReleaseVersions:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the releaseversions.
        AddDate:
          type: string
          format: date-time
          description: The AddDate for the releaseversions.
        ApplicationID:
          type: integer
          format: int32
          description: The ApplicationID for the releaseversions.
        ReleaseName:
          type: string
          description: The ReleaseName for the releaseversions.
        ReleaseDate:
          type: string
          format: date-time
          description: The ReleaseDate for the releaseversions.
        Description:
          type: string
          description: The Description for the releaseversions.
        Source:
          type: string
          description: The Source for the releaseversions.
        SourceID:
          type: integer
          format: int32
          description: The SourceID for the releaseversions.
        Released:
          type: string
          description: The Released for the releaseversions.
        Status:
          type: string
          description: The Status for the releaseversions.
        RetireDate:
          type: string
          format: date-time
          description: The RetireDate for the releaseversions.
    PullRequests:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: The ID for the pullrequests.
        AddDate:
          type: string
          format: date-time
          description: The AddDate for the pullrequests.
        ReleaseID:
          type: integer
          format: int32
          description: The ReleaseID for the pullrequests.
        Name:
          type: string
          description: The Name for the pullrequests.
        Description:
          type: string
          description: The Description for the pullrequests.
        Source:
          type: string
          description: The Source for the pullrequests.
        SourceID:
          type: integer
          format: int32
          description: The SourceID for the pullrequests.
        Reporter:
          type: string
          description: The Reporter for the pullrequests.
        Approvers:
          type: string
          description: The Approvers for the pullrequests.
        Status:
          type: string
          description: The Status for the pullrequests.
tags:
  - name: Vulnerabilities
  - name: AssetApplications
  - name: AssetDatabases
  - name: AssetGroups
  - name: AssetGroupAsset
  - name: NetworkServices
  - name: AssetNetworkServices
  - name: PipelineJobs
  - name: BusinessApplications
  - name: IPAssets
  - name: PrivateNetworks
  - name: Databases
  - name: Technologies
  - name: DockerImages
  - name: AppCodeComposition
  - name: BuildArtifacts
  - name: GitRepo
  - name: ImportedCode
  - name: VulnerabilityScans
  - name: VulnerabilityRemediation
  - name: CVSSBaseScores
  - name: CVSSBaseScoresV2
  - name: CVSSBaseScoresV2Extensions
  - name: CVSSBaseScoresV3Extensions
  - name: CVSSBaseScoresV3
  - name: SourceCodeFile
  - name: ServiceTickets
  - name: ReleaseVersions
  - name: PullRequests
paths:
  /vulnerabilities:
    description: List all vulnerabilities within the current permissions scope.
    get:
      tags:
        - Vulnerabilities
      summary: List Vulnerabilities
      security:
        - oAuth2ClientCredentials:
          - read:vulnerabilities
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vulnerabilities'
              example:
                - AddDate: "2023-01-05T01:07:32"
                  ApplicationId: 4
                  Attack: ""
                  CVEID: ""
                  CWEID: "CWE-798"
                  Classification: "SecretScan-Github"
                  Description: "Github Secret/Credential Discovered in file: ci_cd/ReportRunner.py"
                  DockerImageId: ""
                  Evidence: ""
                  HostId: ""
                  HtmlMethod: ""
                  InitialScanId: 195
                  LastModifiedDate: "2023-01-24T14:20:58"
                  MitigationDate: ""
                  Param: ""
                  ReferenceName: ""
                  ReferenceTags: ""
                  ReferenceUrl: ""
                  ReleaseDate: "2023-01-05T01:07:27"
                  ScanId: 214
                  Severity: "Critical"
                  Solution: ""
                  Source: "Trufflehog-CI_CD"
                  SourceCodeFileEndCol: ""
                  SourceCodeFileEndLine: ""
                  SourceCodeFileId: ""
                  SourceCodeFileStartCol: ""
                  SourceCodeFileStartLine: ""
                  Status: "New"
                  Uri: ""
                  VulnerabilityID: 18587
                  VulnerabilityName: "Hardcoded Secret - Github"
                  VulnerableFileName: "ci_cd/ReportRunner.py"
                  VulnerableFilePath: ""
                  VulnerablePackage: ""
  /add_vulnerabilities:
    description: Add new vulnerabilities in bulk or as a single entity.
    post:
      tags:
        - Vulnerabilities
      summary: Add Vulnerabilities
      security:
        - oAuth2ClientCredentials:
          - write:vulnerabilities
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                VulnerabilityName:
                  type: string
                  description: The VulnerabilityName for the vulnerabilities.
                CVEID:
                  type: string
                  description: The CVEID for the vulnerabilities.
                CWEID:
                  type: string
                  description: The CWEID for the vulnerabilities.
                Description:
                  type: string
                  description: The Description for the vulnerabilities.
                ReleaseDate:
                  type: string
                  format: date-time
                  description: The ReleaseDate for the vulnerabilities.
                Severity:
                  type: string
                  description: The Severity for the vulnerabilities.
                Classification:
                  type: string
                  description: The Classification for the vulnerabilities.
                Source:
                  type: string
                  description: The Source for the vulnerabilities.
                LastModifiedDate:
                  type: string
                  format: date-time
                  description: The LastModifiedDate for the vulnerabilities.
                ReferenceName:
                  type: string
                  description: The ReferenceName for the vulnerabilities.
                ReferenceUrl:
                  type: string
                  description: The ReferenceUrl for the vulnerabilities.
                ReferenceTags:
                  type: string
                  description: The ReferenceTags for the vulnerabilities.
                AddDate:
                  type: string
                  format: date-time
                  description: The AddDate for the vulnerabilities.
                SourceCodeFileId:
                  type: integer
                  format: int32
                  description: The SourceCodeFileId for the vulnerabilities.
                SourceCodeFileStartLine:
                  type: integer
                  format: int32
                  description: The SourceCodeFileStartLine for the vulnerabilities.
                SourceCodeFileStartCol:
                  type: integer
                  format: int32
                  description: The SourceCodeFileStartCol for the vulnerabilities.
                SourceCodeFileEndLine:
                  type: integer
                  format: int32
                  description: The SourceCodeFileEndLine for the vulnerabilities.
                SourceCodeFileEndCol:
                  type: integer
                  format: int32
                  description: The SourceCodeFileEndCol for the vulnerabilities.
                DockerImageId:
                  type: integer
                  format: int32
                  description: The DockerImageId for the vulnerabilities.
                ApplicationId:
                  type: integer
                  format: int32
                  description: The ApplicationId for the vulnerabilities.
                HostId:
                  type: integer
                  format: int32
                  description: The HostId for the vulnerabilities.
                Uri:
                  type: string
                  description: The Uri for the vulnerabilities.
                HtmlMethod:
                  type: string
                  description: The HtmlMethod for the vulnerabilities.
                Param:
                  type: string
                  description: The Param for the vulnerabilities.
                Attack:
                  type: string
                  description: The Attack for the vulnerabilities.
                Evidence:
                  type: string
                  description: The Evidence for the vulnerabilities.
                Solution:
                  type: string
                  description: The Solution for the vulnerabilities.
                VulnerablePackage:
                  type: string
                  description: The VulnerablePackage for the vulnerabilities.
                VulnerableFileName:
                  type: string
                  description: The VulnerableFileName for the vulnerabilities.
                VulnerableFilePath:
                  type: string
                  description: The VulnerableFilePath for the vulnerabilities.
                MitigationDate:
                  type: string
                  format: date-time
                  description: The MitigationDate for the vulnerabilities.
                Status:
                  type: string
                  description: The Status for the vulnerabilities.
                ScanId:
                  type: integer
                  format: int32
                  description: The ScanId for the vulnerabilities.
                InitialScanId:
                  type: integer
                  format: int32
                  description: The InitialScanId for the vulnerabilities.
            examples:
              single entity:
                value: {
                    "VulnerabilityName": "This is vulnerability one",
                    "CVEID": "CVE-123",
                    "CWEID": "CWE-45",
                    "Description": "Don't worry, this is just a test!",
                    "ReleaseDate": "2022-11-07",
                    "Severity": "High",
                    "Classification": "Container",
                    "Source": "PostmanTest",
                    "LastModifiedDate": "2022-11-07",
                    "ReferenceName": "None",
                    "ReferenceUrl": "None",
                    "ReferenceTags": "None",
                    "AddDate": "2022-11-08",
                }
              multiple entities:
                value: [
                {
                    "VulnerabilityName": "This is vulnerability one",
                    "CVEID": "CVE-123",
                    "CWEID": "CWE-45",
                    "Description": "Don't worry, this is just a test!",
                    "ReleaseDate": "2022-11-07",
                    "Severity": "High",
                    "Classification": "Container",
                    "Source": "PostmanTest",
                    "LastModifiedDate": "2022-11-07",
                    "ReferenceName": "None",
                    "ReferenceUrl": "None",
                    "ReferenceTags": "None",
                    "AddDate": "2022-11-08",
                },
                {
                    "VulnerabilityName": "This is vulnerability two",
                    "CVEID": "CVE-123",
                    "CWEID": "CWE-45",
                    "Description": "Don't worry, this is just a test!",
                    "ReleaseDate": "2022-11-07",
                    "Severity": "High",
                    "Classification": "Container",
                    "Source": "PostmanTest",
                    "LastModifiedDate": "2022-11-07",
                    "ReferenceName": "None",
                    "ReferenceUrl": "None",
                    "ReferenceTags": "None",
                    "AddDate": "2022-11-08",
                },
                ]
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the vulnerabilities.
              example:
                ID: 16
  /delete_vulnerabilities:
    description: Delete the Vulnerabilities that match the property filters.
    post:
      tags:
        - Vulnerabilities
      summary: Delete Vulnerabilities
      security:
        - oAuth2ClientCredentials:
          - write:vulnerabilities
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vulnerabilities'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_vulnerabilities:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - Vulnerabilities
      summary: Edit Vulnerabilities
      security:
        - oAuth2ClientCredentials:
          - write:vulnerabilities
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/Vulnerabilities'
                values:
                  $ref: '#/components/schemas/Vulnerabilities'
            examples:
              single filter property:
                value: {
                  "filter": {'VulnerabilityID': '5'},
                  "values": {'VulnerabilityName': 'This is NOT a REAL vulnerability', 'CVEID': 'CVE-123', 'CWEID': 'CWE-45', 'Description': "Don't worry, this is just a test!", 'ReleaseDate': '2022-11-07', 'Severity': 'High', 'Classification': 'Container', 'Source': 'PostmanTest', 'LastModifiedDate': '2022-11-07', 'ReferenceName': 'None', 'ReferenceUrl': 'None', 'ReferenceTags': 'None', 'AddDate': '2022-11-08'}
                }
              multiple filter properties:
                value: {
                  "filter": {'CVEID': 'CVE-123', 'Classification': 'Container', 'Source': 'PostmanTest'},
                  "values": {'Description': "Don't worry, this is just a test!", 'ReleaseDate': '2022-11-07', 'Severity': 'High'}
                }

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited Vulnerabilities.
              example:
                ID: 5
  /search_vulnerabilities:
    description: Search for vulnerabilities that match the properties filter(s).
    post:
      tags:
        - Vulnerabilities
      summary: Search Vulnerabilities
      security:
        - oAuth2ClientCredentials:
          - read:vulnerabilities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vulnerabilities'
            examples:
              single filter property:
                value: {'VulnerabilityName': 'This is a REAL vulnerability'}
              multiple filter property:
                value: {'ApplicationID': '4', 'VulnerabilityName': 'This is a REAL vulnerability'}
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vulnerabilities'
              example:
                - AddDate: '2022-11-10'
                  CVEID: 'CVE-123'
                  CWEID: 'CWE-45'
                  Classification: 'Container'
                  Description: 'Dont worry, this is just a test!'
                  LastModifiedDate: '2022-11-07'
                  ReferenceName: 'None'
                  ReferenceTags: 'None'
                  ReferenceUrl: 'None'
                  ReleaseDate: '2022-11-07'
                  Severity: 'High'
                  Source: 'PostmanTest'
                  VulnerabilityID: '17'
                  VulnerabilityName: 'This is a test vulnerability'
                - AddDate: '2022-11-10'
                  CVEID: 'CVE-123'
                  CWEID: 'CWE-45'
                  Classification: 'Container'
                  Description: 'Dont worry, this is just a test!'
                  LastModifiedDate: '2022-11-07'
                  ReferenceName: 'None'
                  ReferenceTags: 'None'
                  ReferenceUrl: 'None'
                  ReleaseDate: '2022-11-07'
                  Severity: 'High'
                  Source: 'PostmanTest'
                  VulnerabilityID: '18'
                  VulnerabilityName: 'This is a test vulnerability'
  /assetapplications:
    description: List all assetapplications within the current permissions scope.
    get:
      tags:
        - AssetApplications
      summary: List AssetApplications
      security:
        - oAuth2ClientCredentials:
            - read:assetapplications
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetApplications'
              example:
                - ApplicationID: 4
                  ID: 2
                  TechnologyID: 2
  /add_assetapplications:
    description: Add new assetapplications in bulk or as a single entity.
    post:
      tags:
        - AssetApplications
      summary: Add AssetApplications
      security:
        - oAuth2ClientCredentials:
          - write:assetapplications
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                TechnologyID:
                  type: integer
                  format: int32
                  description: The TechnologyID for the assetapplications.
                ApplicationID:
                  type: integer
                  format: int32
                  description: The ApplicationID for the assetapplications.
            examples:
              single entity:
                value: {
                    "TechnologyID": "1",
                    "ApplicationID": "4",
                }
              multipe entities:
                value: [
                {
                    "TechnologyID": "1",
                    "ApplicationID": "4",
                },
                {
                    "TechnologyID": "2",
                    "ApplicationID": "5",
                },
                ]
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the assetapplications.
              example:
                ID: 16
  /delete_assetapplications:
    description: Delete the AssetApplications that match the property filters.
    post:
      tags:
        - AssetApplications
      summary: Delete AssetApplications
      security:
        - oAuth2ClientCredentials:
          - write:assetapplications
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetApplications'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_assetapplications:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - AssetApplications
      summary: Edit AssetApplications
      security:
        - oAuth2ClientCredentials:
          - write:assetapplications
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/AssetApplications'
                values:
                  $ref: '#/components/schemas/AssetApplications'
            examples:
              single filter property:
                value: {
                  "filter": {'ID': '4'},
                  "values": {'ApplicationID': '23'}
                }
              multiple filter property:
                value: {
                  "filter": {'ApplicationID': '4', 'TechnologyID': '1'},
                  "values": {'ApplicationID': '23'}
                }

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited AssetApplications.
              example:
                ID: 5
  /search_assetapplications:
    description: Search for assetapplications that match the properties filter(s).
    post:
      tags:
        - AssetApplications
      summary: Search AssetApplications
      security:
        - oAuth2ClientCredentials:
          - read:assetapplications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetApplications'
            examples:
              single filter property:
                value: {'ApplicationID': '23'}
              multiple filter property:
                value: {'ApplicationID': '4', 'TechnologyID': '1'}
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetApplications'
              example:
                - ApplicationID: '23'
                  ID: '4'
                  TechnologyID: '1'
  /assetdatabases:
    description: List all assetdatabases within the current permissions scope.
    get:
      tags:
        - AssetDatabases
      summary: List AssetDatabases
      security:
        - oAuth2ClientCredentials:
          - read:assetdatabases
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDatabases'
              example:
                - DatabaseID: 1
                  ID: 1
                  TechnologyID: 1
  /add_assetdatabases:
    description: Add new assetdatabases in bulk or as a single entity.
    post:
      tags:
        - AssetDatabases
      summary: Add AssetDatabases
      security:
        - oAuth2ClientCredentials:
          - write:assetdatabases
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                TechnologyID:
                  type: integer
                  format: int32
                  description: The TechnologyID for the assetdatabases.
                DatabaseID:
                  type: integer
                  format: int32
                  description: The DatabaseID for the assetdatabases.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the assetdatabases.
              example:
                ID: 16
  /delete_assetdatabases:
    description: Delete the AssetDatabases that match the property filters.
    post:
      tags:
        - AssetDatabases
      summary: Delete AssetDatabases
      security:
        - oAuth2ClientCredentials:
          - write:assetdatabases
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetDatabases'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_assetdatabases:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - AssetDatabases
      summary: Edit AssetDatabases
      security:
        - oAuth2ClientCredentials:
          - write:assetdatabases
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/AssetDatabases'
                values:
                  $ref: '#/components/schemas/AssetDatabases'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited AssetDatabases.
              example:
                ID: 5
  /search_assetdatabases:
    description: Search for assetdatabases that match the properties filter(s).
    post:
      tags:
        - AssetDatabases
      summary: Search AssetDatabases
      security:
        - oAuth2ClientCredentials:
          - read:assetdatabases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetDatabases'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDatabases'
              example:
                - DatabaseID: '1'
                  ID: '1'
                  TechnologyID: '2'
  /assetgroups:
    description: List all assetgroups within the current permissions scope.
    get:
      tags:
        - AssetGroups
      summary: List AssetGroups
      security:
        - oAuth2ClientCredentials:
          - read:assetgroups
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetGroups'
              example:
                - AssetGroupDesc: "This is a sample asset group."
                  AssetGroupName: "Sample Asset Group"
                  ID: 1
                  RegDate: "2023-01-21T18:33:42"
  /add_assetgroups:
    description: Add new assetgroups in bulk or as a single entity.
    post:
      tags:
        - AssetGroups
      summary: Add AssetGroups
      security:
        - oAuth2ClientCredentials:
          - write:assetgroups
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AssetGroupName:
                  type: string
                  description: The AssetGroupName for the assetgroups.
                AssetGroupDesc:
                  type: string
                  description: The AssetGroupDesc for the assetgroups.
                RegDate:
                  type: string
                  format: date-time
                  description: The RegDate for the assetgroups.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the assetgroups.
              example:
                ID: 16
  /delete_assetgroups:
    description: Delete the AssetGroups that match the property filters.
    post:
      tags:
        - AssetGroups
      summary: Delete AssetGroups
      security:
        - oAuth2ClientCredentials:
          - write:assetgroups
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetGroups'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_assetgroups:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - AssetGroups
      summary: Edit AssetGroups
      security:
        - oAuth2ClientCredentials:
          - write:assetgroups
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/AssetGroups'
                values:
                  $ref: '#/components/schemas/AssetGroups'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited AssetGroups.
              example:
                ID: 5
  /search_assetgroups:
    description: Search for assetgroups that match the properties filter(s).
    post:
      tags:
        - AssetGroups
      summary: Search AssetGroups
      security:
        - oAuth2ClientCredentials:
          - read:assetgroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetGroups'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetGroups'
              example:
                - AssetGroupDesc: 'This is a sample asset group that has been edited.'
                  AssetGroupName: 'Sample Asset Group'
                  ID: '1'
                  RegDate: '2023-01-21T18:33:42'
  /assetgroupasset:
    description: List all assetgroupasset within the current permissions scope.
    get:
      tags:
        - AssetGroupAsset
      summary: List AssetGroupAsset
      security:
        - oAuth2ClientCredentials:
          - read:assetgroupasset
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetGroupAsset'
              example:
                - AssetGroupID: 2
                  ID: 1
                  TechnologyID: 1
  /add_assetgroupasset:
    description: Add new assetgroupasset in bulk or as a single entity.
    post:
      tags:
        - AssetGroupAsset
      summary: Add AssetGroupAsset
      security:
        - oAuth2ClientCredentials:
          - write:assetgroupasset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AssetGroupID:
                  type: integer
                  format: int32
                  description: The AssetGroupID for the assetgroupasset.
                TechnologyID:
                  type: integer
                  format: int32
                  description: The TechnologyID for the assetgroupasset.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the assetgroupasset.
              example:
                ID: 16
  /delete_assetgroupasset:
    description: Delete the AssetGroupAsset that match the property filters.
    post:
      tags:
        - AssetGroupAsset
      summary: Delete AssetGroupAsset
      security:
        - oAuth2ClientCredentials:
          - write:assetgroupasset
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetGroupAsset'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_assetgroupasset:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - AssetGroupAsset
      summary: Edit AssetGroupAsset
      security:
        - oAuth2ClientCredentials:
          - write:assetgroupasset
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/AssetGroupAsset'
                values:
                  $ref: '#/components/schemas/AssetGroupAsset'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited AssetGroupAsset.
              example:
                ID: 5
  /search_assetgroupasset:
    description: Search for assetgroupasset that match the properties filter(s).
    post:
      tags:
        - AssetGroupAsset
      summary: Search AssetGroupAsset
      security:
        - oAuth2ClientCredentials:
          - read:assetgroupasset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetGroupAsset'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetGroupAsset'
              example:
                - AssetGroupID: '2'
                  ID: '1'
                  TechnologyID: '1'
  /networkservices:
    description: List all networkservices within the current permissions scope.
    get:
      tags:
        - NetworkServices
      summary: List NetworkServices
      security:
        - oAuth2ClientCredentials:
          - read:networkservices
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkServices'
              example:
                - ID: 1
                  Name: "SSH"
                  Port: "22"
                  Product: "OpenSSH"
                  Protocol: "TCP"
                  RegDate: "2023-01-21T19:38:47"
                  Vendor: "OpenSSH"
                  Version: "2.11"
  /add_networkservices:
    description: Add new networkservices in bulk or as a single entity.
    post:
      tags:
        - NetworkServices
      summary: Add NetworkServices
      security:
        - oAuth2ClientCredentials:
            - write:networkservices
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                  description: The Name for the networkservices.
                Port:
                  type: string
                  description: The Port for the networkservices.
                Product:
                  type: string
                  description: The Product for the networkservices.
                Protocol:
                  type: string
                  description: The Protocol for the networkservices.
                Vendor:
                  type: string
                  description: The Vendor for the networkservices.
                Version:
                  type: string
                  description: The Version for the networkservices.
                RegDate:
                  type: string
                  format: date-time
                  description: The RegDate for the networkservices.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the networkservices.
              example:
                ID: 16
  /delete_networkservices:
    description: Delete the NetworkServices that match the property filters.
    post:
      tags:
        - NetworkServices
      summary: Delete NetworkServices
      security:
        - oAuth2ClientCredentials:
          - write:networkservices
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkServices'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_networkservices:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - NetworkServices
      summary: Edit NetworkServices
      security:
        - oAuth2ClientCredentials:
          - write:networkservices
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/NetworkServices'
                values:
                  $ref: '#/components/schemas/NetworkServices'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited NetworkServices.
              example:
                ID: 5
  /search_networkservices:
    description: Search for networkservices that match the properties filter(s).
    post:
      tags:
        - NetworkServices
      summary: Search NetworkServices
      security:
        - oAuth2ClientCredentials:
          - read:networkservices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkServices'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkServices'
              example:
                - ID: '1'
                  Name: 'SSH'
                  Port: '22'
                  Product: 'OpenSSH'
                  Protocol: 'TCP'
                  RegDate: '2023-01-21T19:38:47'
                  Vendor: 'OpenSSH'
                  Version: '2.11'
  /assetnetworkservices:
    description: List all assetnetworkservices within the current permissions scope.
    get:
      tags:
        - AssetNetworkServices
      summary: List AssetNetworkServices
      security:
        - oAuth2ClientCredentials:
          - read:assetnetworkservices
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetNetworkServices'
              example:
                - AssetID: 1
                  ID: 1
                  ServiceID: 2
  /add_assetnetworkservices:
    description: Add new assetnetworkservices in bulk or as a single entity.
    post:
      tags:
        - AssetNetworkServices
      summary: Add AssetNetworkServices
      security:
        - oAuth2ClientCredentials:
          - write:assetnetworkservices
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AssetID:
                  type: integer
                  format: int32
                  description: The AssetID for the assetnetworkservices.
                ServiceID:
                  type: integer
                  format: int32
                  description: The ServiceID for the assetnetworkservices.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the assetnetworkservices.
              example:
                ID: 16
  /delete_assetnetworkservices:
    description: Delete the AssetNetworkServices that match the property filters.
    post:
      tags:
        - AssetNetworkServices
      summary: Delete AssetNetworkServices
      security:
        - oAuth2ClientCredentials:
          - write:assetnetworkservices
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetNetworkServices'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_assetnetworkservices:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - AssetNetworkServices
      summary: Edit AssetNetworkServices
      security:
        - oAuth2ClientCredentials:
          - write:assetnetworkservices
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/AssetNetworkServices'
                values:
                  $ref: '#/components/schemas/AssetNetworkServices'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited AssetNetworkServices.
              example:
                ID: 5
  /search_assetnetworkservices:
    description: Search for assetnetworkservices that match the properties filter(s).
    post:
      tags:
        - AssetNetworkServices
      summary: Search AssetNetworkServices
      security:
        - oAuth2ClientCredentials:
          - read:assetnetworkservices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetNetworkServices'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetNetworkServices'
              example:
                - AssetID: '1'
                  ID: '1'
                  ServiceID: '2'
  /pipelinejobs:
    description: List all pipelinejobs within the current permissions scope.
    get:
      tags:
        - PipelineJobs
      summary: List PipelineJobs
      security:
        - oAuth2ClientCredentials:
          - read:pipelinejobs
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineJobs'
              example:
                - ApplicationId: 1
                  BranchName: "release/11-2022/Test-1"
                  BuildNum: "4"
                  GitBranch: "master"
                  GitCommit: "4a7135423fda65eed143adaddc98adbcebfb34b7"
                  GitUrl: "https://github.com/SecurityUniversalOrg/Security-Universal-Management.git"
                  ID: 1
                  JobName: "SecurityUniversal-Mgmt-new/release%2F11-2022%2FTest-1"
                  Node: "built-in"
                  NodeAssetId: 1
                  NodeIp: "192.168.0.127"
                  Project: "SecurityUniversal-Mgmt-new"
                  Source: "Jenkins"
                  SourceJobId: 4
                  StartDate: "2022-11-28T12:00:00"
                  Status: "Failed"
  /add_pipelinejobs:
    description: Add new pipelinejobs in bulk or as a single entity.
    post:
      tags:
        - PipelineJobs
      summary: Add PipelineJobs
      security:
        - oAuth2ClientCredentials:
          - write:pipelinejobs
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                StartDate:
                  type: string
                  format: date-time
                  description: The StartDate for the pipelinejobs.
                Status:
                  type: string
                  description: The Status for the pipelinejobs.
                Source:
                  type: string
                  description: The Source for the pipelinejobs.
                SourceJobId:
                  type: integer
                  format: int32
                  description: The SourceJobId for the pipelinejobs.
                ApplicationId:
                  type: integer
                  format: int32
                  description: The ApplicationId for the pipelinejobs.
                BranchName:
                  type: string
                  description: The BranchName for the pipelinejobs.
                BuildNum:
                  type: string
                  description: The BuildNum for the pipelinejobs.
                JobName:
                  type: string
                  description: The JobName for the pipelinejobs.
                Project:
                  type: string
                  description: The Project for the pipelinejobs.
                Node:
                  type: string
                  description: The Node for the pipelinejobs.
                NodeAssetId:
                  type: integer
                  format: int32
                  description: The NodeAssetId for the pipelinejobs.
                GitCommit:
                  type: string
                  description: The GitCommit for the pipelinejobs.
                GitBranch:
                  type: string
                  description: The GitBranch for the pipelinejobs.
                GitUrl:
                  type: string
                  description: The GitUrl for the pipelinejobs.
                NodeIp:
                  type: string
                  description: The NodeIp for the pipelinejobs.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the pipelinejobs.
              example:
                ID: 16
  /delete_pipelinejobs:
    description: Delete the PipelineJobs that match the property filters.
    post:
      tags:
        - PipelineJobs
      summary: Delete PipelineJobs
      security:
        - oAuth2ClientCredentials:
          - write:pipelinejobs
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineJobs'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_pipelinejobs:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - PipelineJobs
      summary: Edit PipelineJobs
      security:
        - oAuth2ClientCredentials:
          - write:pipelinejobs
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/PipelineJobs'
                values:
                  $ref: '#/components/schemas/PipelineJobs'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited PipelineJobs.
              example:
                ID: 5
  /search_pipelinejobs:
    description: Search for pipelinejobs that match the properties filter(s).
    post:
      tags:
        - PipelineJobs
      summary: Search PipelineJobs
      security:
        - oAuth2ClientCredentials:
          - read:pipelinejobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineJobs'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineJobs'
              example:
                - ApplicationId: '1'
                  BranchName: 'release/11-2022/Test-1'
                  BuildNum: '4'
                  GitBranch: 'master'
                  GitCommit: '4a7135423fda65eed143adaddc98adbcebfb34b7'
                  GitUrl: 'https://github.com/SecurityUniversalOrg/Security-Universal-Management.git'
                  ID: '1'
                  JobName: 'SecurityUniversal-Mgmt-new/release%2F11-2022%2FTest-1'
                  Node: 'built-in'
                  NodeAssetId: '1'
                  NodeIp: '192.168.0.127'
                  Project: 'SecurityUniversal-Mgmt-new'
                  Source: 'Jenkins'
                  SourceJobId: '4'
                  StartDate: '2022-11-28T12:00:00'
                  Status: 'Failed'
  /businessapplications:
    description: List all businessapplications within the current permissions scope.
    get:
      tags:
        - BusinessApplications
      summary: List BusinessApplications
      security:
        - oAuth2ClientCredentials:
          - read:businessapplications
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessApplications'
              example:
                - AccountProvisionAndDeprovision: ""
                  AccountProvisionSupportGrp: ""
                  AppMetricCat: ""
                  AppSupportType: ""
                  AppValue: "Critical"
                  ApplicationAcronym: ""
                  ApplicationName: "TestApp-1"
                  ApplicationType: ""
                  ApplicationURL: ""
                  AssetSystem: ""
                  Assignment: ""
                  AssignmentChangedDate: ""
                  BiaCritical: ""
                  BusinessImpactDesc: ""
                  CicdStatus: ""
                  Criticality: ""
                  Custodian: ""
                  Customization: ""
                  DatabaseName: ""
                  Description: ""
                  Disposition: ""
                  Edition: ""
                  EmployeeData: ""
                  Hosting: ""
                  HostingPlatform: ""
                  ID: 4
                  InHouseDev: ""
                  Language: ""
                  LctlAppID: ""
                  Lifecycle: ""
                  LifecycleStatus: ""
                  LogicalAccessControlUrl: ""
                  MalAddReason: ""
                  MalAddReasonDetails: ""
                  MalListingAddDate: ""
                  MiscCustomerData: ""
                  OfficialBusinessRecord: ""
                  Origin: ""
                  Owner: ""
                  PCI: ""
                  PHI: ""
                  PII: ""
                  PMUCNUSGOVT: ""
                  PreprodDate: ""
                  PrimaryLob: ""
                  PrimaryProdUrl: ""
                  PrioritizedForStability: ""
                  ProductType: ""
                  ProductionDate: ""
                  QaActivelyTested: ""
                  RegDate: "2022-12-04T16:32:01"
                  Region: ""
                  RepoURL: "https://github.com/SecurityUniversalOrg/Security-Universal-VulnManager.git"
                  RetentionPeriod: ""
                  RetirementDate: ""
                  Revenue: ""
                  RopaExists: ""
                  SoxCritical: ""
                  SubjectToLegalHold: ""
                  SupportEngApprReq: ""
                  SysgenID: ""
                  TAWG: ""
                  TargetRetirementDate: ""
                  TechnologyID: ""
                  Type: ""
                  UsedByMultipleLob: ""
                  UserAccessControl: ""
                  UserAccessRestrictions: ""
                  UserRecords: ""
                  Vendor: ""
                  VendorDev: ""
                  Version: "12-2022"
                  WebEnabled: ""
                  WorkaroundDesc: ""
  /add_businessapplications:
    description: Add new businessapplications in bulk or as a single entity.
    post:
      tags:
        - BusinessApplications
      summary: Add BusinessApplications
      security:
        - oAuth2ClientCredentials:
          - write:businessapplications
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                TechnologyID:
                  type: integer
                  format: int32
                  description: The TechnologyID for the businessapplications.
                ApplicationName:
                  type: string
                  description: The ApplicationName for the businessapplications.
                Version:
                  type: string
                  description: The Version for the businessapplications.
                Vendor:
                  type: string
                  description: The Vendor for the businessapplications.
                Language:
                  type: string
                  description: The Language for the businessapplications.
                InHouseDev:
                  type: integer
                  format: int32
                  description: The InHouseDev for the businessapplications.
                VendorDev:
                  type: integer
                  format: int32
                  description: The VendorDev for the businessapplications.
                Customization:
                  type: integer
                  format: int32
                  description: The Customization for the businessapplications.
                DatabaseName:
                  type: string
                  description: The DatabaseName for the businessapplications.
                AppValue:
                  type: string
                  description: The AppValue for the businessapplications.
                Owner:
                  type: string
                  description: The Owner for the businessapplications.
                Custodian:
                  type: string
                  description: The Custodian for the businessapplications.
                Hosting:
                  type: string
                  description: The Hosting for the businessapplications.
                Description:
                  type: string
                  description: The Description for the businessapplications.
                PHI:
                  type: string
                  description: The PHI for the businessapplications.
                PII:
                  type: string
                  description: The PII for the businessapplications.
                PCI:
                  type: string
                  description: The PCI for the businessapplications.
                MiscCustomerData:
                  type: string
                  description: The MiscCustomerData for the businessapplications.
                Type:
                  type: string
                  description: The Type for the businessapplications.
                RegDate:
                  type: string
                  format: date-time
                  description: The RegDate for the businessapplications.
                Edition:
                  type: string
                  description: The Edition for the businessapplications.
                WebEnabled:
                  type: string
                  description: The WebEnabled for the businessapplications.
                ApplicationURL:
                  type: string
                  description: The ApplicationURL for the businessapplications.
                RepoURL:
                  type: string
                  description: The RepoURL for the businessapplications.
                ApplicationType:
                  type: string
                  description: The ApplicationType for the businessapplications.
                ProductType:
                  type: string
                  description: The ProductType for the businessapplications.
                Lifecycle:
                  type: string
                  description: The Lifecycle for the businessapplications.
                Origin:
                  type: string
                  description: The Origin for the businessapplications.
                UserRecords:
                  type: string
                  description: The UserRecords for the businessapplications.
                Revenue:
                  type: string
                  description: The Revenue for the businessapplications.
                SysgenID:
                  type: string
                  description: The SysgenID for the businessapplications.
                ApplicationAcronym:
                  type: string
                  description: The ApplicationAcronym for the businessapplications.
                LctlAppID:
                  type: string
                  description: The LctlAppID for the businessapplications.
                Assignment:
                  type: string
                  description: The Assignment for the businessapplications.
                AssignmentChangedDate:
                  type: string
                  format: date-time
                  description: The AssignmentChangedDate for the businessapplications.
                LifecycleStatus:
                  type: string
                  description: The LifecycleStatus for the businessapplications.
                Disposition:
                  type: string
                  description: The Disposition for the businessapplications.
                TAWG:
                  type: string
                  description: The TAWG for the businessapplications.
                Criticality:
                  type: string
                  description: The Criticality for the businessapplications.
                PrioritizedForStability:
                  type: string
                  description: The PrioritizedForStability for the businessapplications.
                BiaCritical:
                  type: string
                  description: The BiaCritical for the businessapplications.
                SoxCritical:
                  type: string
                  description: The SoxCritical for the businessapplications.
                Region:
                  type: string
                  description: The Region for the businessapplications.
                HostingPlatform:
                  type: string
                  description: The HostingPlatform for the businessapplications.
                PrimaryLob:
                  type: string
                  description: The PrimaryLob for the businessapplications.
                UsedByMultipleLob:
                  type: string
                  description: The UsedByMultipleLob for the businessapplications.
                MalListingAddDate:
                  type: string
                  format: date-time
                  description: The MalListingAddDate for the businessapplications.
                PreprodDate:
                  type: string
                  format: date-time
                  description: The PreprodDate for the businessapplications.
                ProductionDate:
                  type: string
                  format: date-time
                  description: The ProductionDate for the businessapplications.
                RetirementDate:
                  type: string
                  format: date-time
                  description: The RetirementDate for the businessapplications.
                TargetRetirementDate:
                  type: string
                  format: date-time
                  description: The TargetRetirementDate for the businessapplications.
                AppSupportType:
                  type: string
                  description: The AppSupportType for the businessapplications.
                BusinessImpactDesc:
                  type: string
                  description: The BusinessImpactDesc for the businessapplications.
                WorkaroundDesc:
                  type: string
                  description: The WorkaroundDesc for the businessapplications.
                AssetSystem:
                  type: string
                  description: The AssetSystem for the businessapplications.
                LogicalAccessControlUrl:
                  type: string
                  description: The LogicalAccessControlUrl for the businessapplications.
                MalAddReason:
                  type: string
                  description: The MalAddReason for the businessapplications.
                MalAddReasonDetails:
                  type: string
                  description: The MalAddReasonDetails for the businessapplications.
                SupportEngApprReq:
                  type: string
                  description: The SupportEngApprReq for the businessapplications.
                QaActivelyTested:
                  type: string
                  description: The QaActivelyTested for the businessapplications.
                PrimaryProdUrl:
                  type: string
                  description: The PrimaryProdUrl for the businessapplications.
                AppMetricCat:
                  type: string
                  description: The AppMetricCat for the businessapplications.
                OfficialBusinessRecord:
                  type: string
                  description: The OfficialBusinessRecord for the businessapplications.
                RetentionPeriod:
                  type: string
                  description: The RetentionPeriod for the businessapplications.
                SubjectToLegalHold:
                  type: string
                  description: The SubjectToLegalHold for the businessapplications.
                EmployeeData:
                  type: string
                  description: The EmployeeData for the businessapplications.
                UserAccessRestrictions:
                  type: string
                  description: The UserAccessRestrictions for the businessapplications.
                UserAccessControl:
                  type: string
                  description: The UserAccessControl for the businessapplications.
                PMUCNUSGOVT:
                  type: string
                  description: The PMUCNUSGOVT for the businessapplications.
                RopaExists:
                  type: string
                  description: The RopaExists for the businessapplications.
                AccountProvisionAndDeprovision:
                  type: string
                  description: The AccountProvisionAndDeprovision for the businessapplications.
                AccountProvisionSupportGrp:
                  type: string
                  description: The AccountProvisionSupportGrp for the businessapplications.
                CicdStatus:
                  type: string
                  description: The CicdStatus for the businessapplications.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the businessapplications.
              example:
                ID: 16
  /delete_businessapplications:
    description: Delete the BusinessApplications that match the property filters.
    post:
      tags:
        - BusinessApplications
      summary: Delete BusinessApplications
      security:
        - oAuth2ClientCredentials:
          - write:businessapplications
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessApplications'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_businessapplications:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - BusinessApplications
      summary: Edit BusinessApplications
      security:
        - oAuth2ClientCredentials:
          - write:businessapplications
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/BusinessApplications'
                values:
                  $ref: '#/components/schemas/BusinessApplications'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited BusinessApplications.
              example:
                ID: 5
  /search_businessapplications:
    description: Search for businessapplications that match the properties filter(s).
    post:
      tags:
        - BusinessApplications
      summary: Search BusinessApplications
      security:
        - oAuth2ClientCredentials:
          - read:businessapplications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessApplications'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessApplications'
              example:
                - AccountProvisionAndDeprovision: 'None'
                  AccountProvisionSupportGrp: 'None'
                  AppMetricCat: 'None'
                  AppSupportType: 'None'
                  AppValue: 'Critical'
                  ApplicationAcronym: 'None'
                  ApplicationName: 'TestApp-1'
                  ApplicationType: 'None'
                  ApplicationURL: 'None'
                  AssetSystem: 'None'
                  Assignment: 'None'
                  AssignmentChangedDate: 'None'
                  BiaCritical: 'None'
                  BusinessImpactDesc: 'None'
                  CicdStatus: 'None'
                  Criticality: 'None'
                  Custodian: 'None'
                  Customization: 'None'
                  DatabaseName: 'None'
                  Description: 'None'
                  Disposition: 'None'
                  Edition: 'None'
                  EmployeeData: 'None'
                  Hosting: 'None'
                  HostingPlatform: 'None'
                  ID: '4'
                  InHouseDev: 'None'
                  Language: 'None'
                  LctlAppID: 'None'
                  Lifecycle: 'None'
                  LifecycleStatus: 'None'
                  LogicalAccessControlUrl: 'None'
                  MalAddReason: 'None'
                  MalAddReasonDetails: 'None'
                  MalListingAddDate: 'None'
                  MiscCustomerData: 'None'
                  OfficialBusinessRecord: 'None'
                  Origin: 'None'
                  Owner: 'None'
                  PCI: 'None'
                  PHI: 'None'
                  PII: 'None'
                  PMUCNUSGOVT: 'None'
                  PreprodDate: 'None'
                  PrimaryLob: 'None'
                  PrimaryProdUrl: 'None'
                  PrioritizedForStability: 'None'
                  ProductType: 'None'
                  ProductionDate: 'None'
                  QaActivelyTested: 'None'
                  RegDate: '2022-12-04T16:32:01'
                  Region: 'None'
                  RepoURL: 'https://github.com/SecurityUniversalOrg/Security-Universal-VulnManager.git'
                  RetentionPeriod: 'None'
                  RetirementDate: 'None'
                  Revenue: 'None'
                  RopaExists: 'None'
                  SoxCritical: 'None'
                  SubjectToLegalHold: 'None'
                  SupportEngApprReq: 'None'
                  SysgenID: 'None'
                  TAWG: 'None'
                  TargetRetirementDate: 'None'
                  TechnologyID: 'None'
                  Type: 'None'
                  UsedByMultipleLob: 'None'
                  UserAccessControl: 'None'
                  UserAccessRestrictions: 'None'
                  UserRecords: 'None'
                  Vendor: 'None'
                  VendorDev: 'None'
                  Version: '12-2022'
                  WebEnabled: 'None'
                  WorkaroundDesc: 'None'
  /ipassets:
    description: List all ipassets within the current permissions scope.
    get:
      tags:
        - IPAssets
      summary: List IPAssets
      security:
        - oAuth2ClientCredentials:
          - read:ipassets
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAssets'
              example:
                - AbbreviatedModel: ""
                  Active: ""
                  AssetSystem: ""
                  AssetTag: ""
                  Assignment: ""
                  Authorized: ""
                  Brand: ""
                  CPUsCores: ""
                  CPUsHWThreads: ""
                  CPUsPhysical: ""
                  ComponentID: ""
                  Description: ""
                  Domain: ""
                  EntityID: ""
                  Hostname: "WebServer-01"
                  ID: 1
                  IPAddress: "127.0.0.1"
                  Location: ""
                  LocationCode: ""
                  MacAddress: "00:00:00:00:00:00"
                  MacVendor: ""
                  Model: ""
                  ModelCategory: ""
                  OS: "Centos 8 Stream"
                  OSArchitecture: ""
                  OSCPE: ""
                  OSEdition: ""
                  OSFamily: ""
                  OSID: ""
                  OSProduct: ""
                  OSSystemName: ""
                  OSType: ""
                  OSUpdate: ""
                  OSVendor: ""
                  OSVersion: ""
                  RegComplete: ""
                  RegDate: "2022-11-30T06:50:00"
                  SerialNumber: ""
                  ServerName: ""
                  Status: ""
                  SubnetID: ""
                  SupportGroup: ""
                  TechnologyID: 2
                  Type: "Server"
  /add_ipassets:
    description: Add new ipassets in bulk or as a single entity.
    post:
      tags:
        - IPAssets
      summary: Add IPAssets
      security:
        - oAuth2ClientCredentials:
          - write:ipassets
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                TechnologyID:
                  type: integer
                  format: int32
                  description: The TechnologyID for the ipassets.
                IPAddress:
                  type: string
                  description: The IPAddress for the ipassets.
                MacAddress:
                  type: string
                  description: The MacAddress for the ipassets.
                Type:
                  type: string
                  description: The Type for the ipassets.
                EntityID:
                  type: string
                  description: The EntityID for the ipassets.
                Hostname:
                  type: string
                  description: The Hostname for the ipassets.
                OS:
                  type: string
                  description: The OS for the ipassets.
                OSArchitecture:
                  type: string
                  description: The OSArchitecture for the ipassets.
                OSFamily:
                  type: string
                  description: The OSFamily for the ipassets.
                OSID:
                  type: string
                  description: The OSID for the ipassets.
                OSProduct:
                  type: string
                  description: The OSProduct for the ipassets.
                OSSystemName:
                  type: string
                  description: The OSSystemName for the ipassets.
                OSType:
                  type: string
                  description: The OSType for the ipassets.
                OSVendor:
                  type: string
                  description: The OSVendor for the ipassets.
                OSVersion:
                  type: string
                  description: The OSVersion for the ipassets.
                Description:
                  type: string
                  description: The Description for the ipassets.
                Domain:
                  type: string
                  description: The Domain for the ipassets.
                Location:
                  type: string
                  description: The Location for the ipassets.
                Active:
                  type: string
                  description: The Active for the ipassets.
                RegComplete:
                  type: string
                  description: The RegComplete for the ipassets.
                RegDate:
                  type: string
                  format: date-time
                  description: The RegDate for the ipassets.
                SubnetID:
                  type: integer
                  format: int32
                  description: The SubnetID for the ipassets.
                Authorized:
                  type: integer
                  format: int32
                  description: The Authorized for the ipassets.
                OSUpdate:
                  type: string
                  description: The OSUpdate for the ipassets.
                OSEdition:
                  type: string
                  description: The OSEdition for the ipassets.
                OSCPE:
                  type: string
                  description: The OSCPE for the ipassets.
                MacVendor:
                  type: string
                  description: The MacVendor for the ipassets.
                ServerName:
                  type: string
                  description: The ServerName for the ipassets.
                ComponentID:
                  type: string
                  description: The ComponentID for the ipassets.
                Assignment:
                  type: string
                  description: The Assignment for the ipassets.
                Status:
                  type: string
                  description: The Status for the ipassets.
                AssetTag:
                  type: string
                  description: The AssetTag for the ipassets.
                SerialNumber:
                  type: string
                  description: The SerialNumber for the ipassets.
                Brand:
                  type: string
                  description: The Brand for the ipassets.
                Model:
                  type: string
                  description: The Model for the ipassets.
                ModelCategory:
                  type: string
                  description: The ModelCategory for the ipassets.
                AbbreviatedModel:
                  type: string
                  description: The AbbreviatedModel for the ipassets.
                CPUsPhysical:
                  type: integer
                  format: int32
                  description: The CPUsPhysical for the ipassets.
                CPUsCores:
                  type: integer
                  format: int32
                  description: The CPUsCores for the ipassets.
                CPUsHWThreads:
                  type: integer
                  format: int32
                  description: The CPUsHWThreads for the ipassets.
                SupportGroup:
                  type: string
                  description: The SupportGroup for the ipassets.
                LocationCode:
                  type: string
                  description: The LocationCode for the ipassets.
                AssetSystem:
                  type: string
                  description: The AssetSystem for the ipassets.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the ipassets.
              example:
                ID: 16
  /delete_ipassets:
    description: Delete the IPAssets that match the property filters.
    post:
      tags:
        - IPAssets
      summary: Delete IPAssets
      security:
        - oAuth2ClientCredentials:
          - write:ipassets
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPAssets'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_ipassets:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - IPAssets
      summary: Edit IPAssets
      security:
        - oAuth2ClientCredentials:
          - write:ipassets
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/IPAssets'
                values:
                  $ref: '#/components/schemas/IPAssets'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited IPAssets.
              example:
                ID: 5
  /search_ipassets:
    description: Search for ipassets that match the properties filter(s).
    post:
      tags:
        - IPAssets
      summary: Search IPAssets
      security:
        - oAuth2ClientCredentials:
          - read:ipassets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPAssets'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAssets'
              example:
                - AbbreviatedModel: 'None'
                  Active: 'None'
                  AssetSystem: 'None'
                  AssetTag: 'None'
                  Assignment: 'None'
                  Authorized: '1'
                  Brand: 'None'
                  CPUsCores: '4'
                  CPUsHWThreads: '24'
                  CPUsPhysical: '4'
                  ComponentID: 'None'
                  Description: 'None'
                  Domain: 'None'
                  EntityID: 'None'
                  Hostname: 'WebServer-03'
                  ID: '3'
                  IPAddress: '127.0.0.1'
                  Location: 'None'
                  LocationCode: 'None'
                  MacAddress: '00:00:00:00:00:00'
                  MacVendor: 'None'
                  Model: 'None'
                  ModelCategory: 'None'
                  OS: 'Centos 8 Stream'
                  OSArchitecture: 'None'
                  OSCPE: 'None'
                  OSEdition: 'None'
                  OSFamily: 'None'
                  OSID: 'None'
                  OSProduct: 'None'
                  OSSystemName: 'None'
                  OSType: 'None'
                  OSUpdate: 'None'
                  OSVendor: 'None'
                  OSVersion: 'None'
                  RegComplete: 'None'
                  RegDate: '2023-01-21T21:22:30'
                  SerialNumber: 'None'
                  ServerName: 'None'
                  Status: 'None'
                  SubnetID: 'None'
                  SupportGroup: 'None'
                  TechnologyID: 'None'
                  Type: 'Server'
  /privatenetworks:
    description: List all privatenetworks within the current permissions scope.
    get:
      tags:
        - PrivateNetworks
      summary: List PrivateNetworks
      security:
        - oAuth2ClientCredentials:
          - read:privatenetworks
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateNetworks'
              example:
                - CIDR: "192.168.0.0/24"
                  Description: "This is a test network"
                  ID: 1
                  MiscCustomerData: ""
                  Name: "Test Network"
                  PCI: ""
                  PHI: ""
                  PII: ""
                  RegDate: "2023-01-21T12:00:00"
                  SubnetMask: "255.255.255.0"
  /add_privatenetworks:
    description: Add new privatenetworks in bulk or as a single entity.
    post:
      tags:
        - PrivateNetworks
      summary: Add PrivateNetworks
      security:
        - oAuth2ClientCredentials:
          - write:privatenetworks
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                  description: The Name for the privatenetworks.
                CIDR:
                  type: string
                  description: The CIDR for the privatenetworks.
                SubnetMask:
                  type: string
                  description: The SubnetMask for the privatenetworks.
                Description:
                  type: string
                  description: The Description for the privatenetworks.
                RegDate:
                  type: string
                  format: date-time
                  description: The RegDate for the privatenetworks.
                PHI:
                  type: integer
                  format: int32
                  description: The PHI for the privatenetworks.
                PII:
                  type: integer
                  format: int32
                  description: The PII for the privatenetworks.
                PCI:
                  type: integer
                  format: int32
                  description: The PCI for the privatenetworks.
                MiscCustomerData:
                  type: integer
                  format: int32
                  description: The MiscCustomerData for the privatenetworks.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the privatenetworks.
              example:
                ID: 16
  /delete_privatenetworks:
    description: Delete the PrivateNetworks that match the property filters.
    post:
      tags:
        - PrivateNetworks
      summary: Delete PrivateNetworks
      security:
        - oAuth2ClientCredentials:
          - write:privatenetworks
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateNetworks'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_privatenetworks:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - PrivateNetworks
      summary: Edit PrivateNetworks
      security:
        - oAuth2ClientCredentials:
          - write:privatenetworks
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/PrivateNetworks'
                values:
                  $ref: '#/components/schemas/PrivateNetworks'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited PrivateNetworks.
              example:
                ID: 5
  /search_privatenetworks:
    description: Search for privatenetworks that match the properties filter(s).
    post:
      tags:
        - PrivateNetworks
      summary: Search PrivateNetworks
      security:
        - oAuth2ClientCredentials:
          - read:privatenetworks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateNetworks'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateNetworks'
              example:
                - CIDR: '192.168.0.0/24'
                  Description: 'This is a test network'
                  ID: '1'
                  MiscCustomerData: '0'
                  Name: 'Test Network'
                  PCI: '0'
                  PHI: '0'
                  PII: '0'
                  RegDate: '2023-01-21T12:00:00'
                  SubnetMask: '255.255.255.0'
  /databases:
    description: List all databases within the current permissions scope.
    get:
      tags:
        - Databases
      summary: List Databases
      security:
        - oAuth2ClientCredentials:
          - read:databases
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Databases'
              example:
                - AssetSystem: ""
                  AssetTag: ""
                  Assignment: ""
                  AssignmentChanged: ""
                  Custodian: ""
                  DatabaseHostname: "Test DB"
                  DatabaseName: "Test DB"
                  DatabaseValue: ""
                  DbInstanceName: ""
                  DbPatchInstall: ""
                  DbPatchLevel: ""
                  DbServiceName: ""
                  DbType: ""
                  DbVersion: ""
                  Description: ""
                  FNMSDiscoveredVer: ""
                  HighestCriticality: ""
                  HostSystem: ""
                  Hosting: ""
                  ID: 1
                  MalAppsOwningDb: ""
                  MiscCustomerData: ""
                  NetworkConnector: ""
                  Owner: ""
                  PCI: ""
                  PHI: ""
                  PII: ""
                  RegDate: "2022-11-30T06:50:00"
                  RoadmapCompliance: ""
                  ServersDbInstalledOn: ""
                  Status: ""
                  SupportabilityLevelDb: ""
                  SupportabilityLevelDbEoslDate: ""
                  TechnologyID: 4
                  Vendor: ""
  /add_databases:
    description: Add new databases in bulk or as a single entity.
    post:
      tags:
        - Databases
      summary: Add Databases
      security:
        - oAuth2ClientCredentials:
          - write:databases
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                TechnologyID:
                  type: integer
                  format: int32
                  description: The TechnologyID for the databases.
                DatabaseName:
                  type: string
                  description: The DatabaseName for the databases.
                Vendor:
                  type: string
                  description: The Vendor for the databases.
                DatabaseValue:
                  type: string
                  description: The DatabaseValue for the databases.
                Owner:
                  type: string
                  description: The Owner for the databases.
                Custodian:
                  type: string
                  description: The Custodian for the databases.
                Hosting:
                  type: string
                  description: The Hosting for the databases.
                Description:
                  type: string
                  description: The Description for the databases.
                PHI:
                  type: string
                  description: The PHI for the databases.
                PII:
                  type: string
                  description: The PII for the databases.
                PCI:
                  type: string
                  description: The PCI for the databases.
                MiscCustomerData:
                  type: string
                  description: The MiscCustomerData for the databases.
                HostSystem:
                  type: string
                  description: The HostSystem for the databases.
                RegDate:
                  type: string
                  format: date-time
                  description: The RegDate for the databases.
                NetworkConnector:
                  type: string
                  description: The NetworkConnector for the databases.
                DatabaseHostname:
                  type: string
                  description: The DatabaseHostname for the databases.
                Assignment:
                  type: string
                  description: The Assignment for the databases.
                AssignmentChanged:
                  type: string
                  format: date-time
                  description: The AssignmentChanged for the databases.
                Status:
                  type: string
                  description: The Status for the databases.
                AssetTag:
                  type: string
                  description: The AssetTag for the databases.
                DbInstanceName:
                  type: string
                  description: The DbInstanceName for the databases.
                DbServiceName:
                  type: string
                  description: The DbServiceName for the databases.
                DbType:
                  type: string
                  description: The DbType for the databases.
                DbVersion:
                  type: string
                  description: The DbVersion for the databases.
                FNMSDiscoveredVer:
                  type: string
                  description: The FNMSDiscoveredVer for the databases.
                DbPatchInstall:
                  type: string
                  description: The DbPatchInstall for the databases.
                DbPatchLevel:
                  type: string
                  description: The DbPatchLevel for the databases.
                ServersDbInstalledOn:
                  type: string
                  description: The ServersDbInstalledOn for the databases.
                MalAppsOwningDb:
                  type: string
                  description: The MalAppsOwningDb for the databases.
                HighestCriticality:
                  type: string
                  description: The HighestCriticality for the databases.
                RoadmapCompliance:
                  type: string
                  description: The RoadmapCompliance for the databases.
                AssetSystem:
                  type: string
                  description: The AssetSystem for the databases.
                SupportabilityLevelDb:
                  type: string
                  description: The SupportabilityLevelDb for the databases.
                SupportabilityLevelDbEoslDate:
                  type: string
                  format: date-time
                  description: The SupportabilityLevelDbEoslDate for the databases.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the databases.
              example:
                ID: 16
  /delete_databases:
    description: Delete the Databases that match the property filters.
    post:
      tags:
        - Databases
      summary: Delete Databases
      security:
        - oAuth2ClientCredentials:
          - write:databases
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Databases'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_databases:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - Databases
      summary: Edit Databases
      security:
        - oAuth2ClientCredentials:
          - write:databases
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/Databases'
                values:
                  $ref: '#/components/schemas/Databases'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited Databases.
              example:
                ID: 5
  /search_databases:
    description: Search for databases that match the properties filter(s).
    post:
      tags:
        - Databases
      summary: Search Databases
      security:
        - oAuth2ClientCredentials:
          - read:databases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Databases'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Databases'
              example:
                - AssetSystem: 'None'
                  AssetTag: 'None'
                  Assignment: 'None'
                  AssignmentChanged: 'None'
                  Custodian: 'None'
                  DatabaseHostname: 'Test DB'
                  DatabaseName: 'Test DB'
                  DatabaseValue: 'None'
                  DbInstanceName: 'None'
                  DbPatchInstall: 'None'
                  DbPatchLevel: 'None'
                  DbServiceName: 'None'
                  DbType: 'None'
                  DbVersion: 'None'
                  Description: 'None'
                  FNMSDiscoveredVer: 'None'
                  HighestCriticality: 'None'
                  HostSystem: 'None'
                  Hosting: 'None'
                  ID: '1'
                  MalAppsOwningDb: 'None'
                  MiscCustomerData: 'None'
                  NetworkConnector: 'None'
                  Owner: 'None'
                  PCI: 'None'
                  PHI: 'None'
                  PII: 'None'
                  RegDate: '2022-11-30T06:50:00'
                  RoadmapCompliance: 'None'
                  ServersDbInstalledOn: 'None'
                  Status: 'None'
                  SupportabilityLevelDb: 'None'
                  SupportabilityLevelDbEoslDate: 'None'
                  TechnologyID: '4'
                  Vendor: 'None'
  /technologies:
    description: List all technologies within the current permissions scope.
    get:
      tags:
        - Technologies
      summary: List Technologies
      security:
        - oAuth2ClientCredentials:
          - read:technologies
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Technologies'
              example:
                - BusinessUnit: ""
                  Classification: ""
                  Custodian: ""
                  Description: ""
                  Edition: ""
                  Language: ""
                  Name: "Su-Mgmt-APP"
                  Owner: ""
                  Part: ""
                  Product: ""
                  RegComplete: ""
                  RegDate: "2022-11-30T06:50:00"
                  TechnologyID: 1
                  TechnologyValue: ""
                  UniqueID: ""
                  UniqueIDType: ""
                  UpdateVer: ""
                  Vendor: ""
                  Version: ""
  /add_technologies:
    description: Add new technologies in bulk or as a single entity.
    post:
      tags:
        - Technologies
      summary: Add Technologies
      security:
        - oAuth2ClientCredentials:
          - write:technologies
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  type: string
                  description: The Name for the technologies.
                Part:
                  type: string
                  description: The Part for the technologies.
                Vendor:
                  type: string
                  description: The Vendor for the technologies.
                Product:
                  type: string
                  description: The Product for the technologies.
                Version:
                  type: string
                  description: The Version for the technologies.
                UpdateVer:
                  type: string
                  description: The UpdateVer for the technologies.
                Edition:
                  type: string
                  description: The Edition for the technologies.
                Language:
                  type: string
                  description: The Language for the technologies.
                TechnologyValue:
                  type: string
                  description: The TechnologyValue for the technologies.
                BusinessUnit:
                  type: string
                  description: The BusinessUnit for the technologies.
                Owner:
                  type: string
                  description: The Owner for the technologies.
                Custodian:
                  type: string
                  description: The Custodian for the technologies.
                Classification:
                  type: string
                  description: The Classification for the technologies.
                UniqueID:
                  type: string
                  description: The UniqueID for the technologies.
                UniqueIDType:
                  type: string
                  description: The UniqueIDType for the technologies.
                Description:
                  type: string
                  description: The Description for the technologies.
                RegComplete:
                  type: string
                  description: The RegComplete for the technologies.
                RegDate:
                  type: string
                  format: date-time
                  description: The RegDate for the technologies.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the technologies.
              example:
                ID: 16
  /delete_technologies:
    description: Delete the Technologies that match the property filters.
    post:
      tags:
        - Technologies
      summary: Delete Technologies
      security:
        - oAuth2ClientCredentials:
          - write:technologies
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Technologies'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_technologies:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - Technologies
      summary: Edit Technologies
      security:
        - oAuth2ClientCredentials:
          - write:technologies
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/Technologies'
                values:
                  $ref: '#/components/schemas/Technologies'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited Technologies.
              example:
                ID: 5
  /search_technologies:
    description: Search for technologies that match the properties filter(s).
    post:
      tags:
        - Technologies
      summary: Search Technologies
      security:
        - oAuth2ClientCredentials:
          - read:technologies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Technologies'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Technologies'
              example:
                - BusinessUnit: ''
                  Classification: ''
                  Custodian: ''
                  Description: ''
                  Edition: ''
                  Language: ''
                  Name: 'Test-APP'
                  Owner: ''
                  Part: ''
                  Product: ''
                  RegComplete: ''
                  RegDate: '2023-01-21T23:00:32'
                  TechnologyID: '5'
                  TechnologyValue: ''
                  UniqueID: ''
                  UniqueIDType: ''
                  UpdateVer: ''
                  Vendor: ''
                  Version: ''
                - BusinessUnit: ''
                  Classification: ''
                  Custodian: ''
                  Description: ''
                  Edition: ''
                  Language: ''
                  Name: 'Test-APP'
                  Owner: ''
                  Part: ''
                  Product: ''
                  RegComplete: ''
                  RegDate: '2023-01-21T23:21:53'
                  TechnologyID: '6'
                  TechnologyValue: ''
                  UniqueID: ''
                  UniqueIDType: ''
                  UpdateVer: ''
                  Vendor: ''
                  Version: ''
  /dockerimages:
    description: List all dockerimages within the current permissions scope.
    get:
      tags:
        - DockerImages
      summary: List DockerImages
      security:
        - oAuth2ClientCredentials:
          - read:dockerimages
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerImages'
              example:
                - AddDate: "2022-11-30T16:17:00"
                  AppIdList: "1,"
                  ID: 1
                  ImageId: "92a2e681809d"
                  ImageName: "bkaiserdevops/su-mgmt"
                  ImageTag: "1"
  /add_dockerimages:
    description: Add new dockerimages in bulk or as a single entity.
    post:
      tags:
        - DockerImages
      summary: Add DockerImages
      security:
        - oAuth2ClientCredentials:
          - write:dockerimages
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AddDate:
                  type: string
                  format: date-time
                  description: The AddDate for the dockerimages.
                ImageName:
                  type: string
                  description: The ImageName for the dockerimages.
                ImageTag:
                  type: string
                  description: The ImageTag for the dockerimages.
                ImageId:
                  type: string
                  description: The ImageId for the dockerimages.
                AppIdList:
                  type: string
                  description: The AppIdList for the dockerimages.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the dockerimages.
              example:
                ID: 16
  /delete_dockerimages:
    description: Delete the DockerImages that match the property filters.
    post:
      tags:
        - DockerImages
      summary: Delete DockerImages
      security:
        - oAuth2ClientCredentials:
          - write:dockerimages
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerImages'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_dockerimages:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - DockerImages
      summary: Edit DockerImages
      security:
        - oAuth2ClientCredentials:
          - write:dockerimages
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/DockerImages'
                values:
                  $ref: '#/components/schemas/DockerImages'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited DockerImages.
              example:
                ID: 5
  /search_dockerimages:
    description: Search for dockerimages that match the properties filter(s).
    post:
      tags:
        - DockerImages
      summary: Search DockerImages
      security:
        - oAuth2ClientCredentials:
          - read:dockerimages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DockerImages'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DockerImages'
              example:
                - AddDate: '2023-01-21T23:37:45'
                  AppIdList: '1,'
                  ID: '3'
                  ImageId: '92a2e681809d'
                  ImageName: 'testrepo/test-image'
                  ImageTag: '1'
  /appcodecomposition:
    description: List all appcodecomposition within the current permissions scope.
    get:
      tags:
        - AppCodeComposition
      summary: List AppCodeComposition
      security:
        - oAuth2ClientCredentials:
          - read:appcodecomposition
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppCodeComposition'
              example:
                - AddDate: "2022-12-29T16:56:03"
                  ApplicationID: 4
                  CFiles: ""
                  CLoc: ""
                  ConfFiles: 3
                  ConfLoc: 287
                  GoFiles: ""
                  GoLoc: ""
                  ID: 1
                  JavaFiles: ""
                  JavaLoc: ""
                  JavascriptFiles: 22
                  JavascriptLoc: 28916
                  JsonFiles: 5
                  JsonLoc: 62625
                  PerlFiles: ""
                  PerlLoc: ""
                  PythonFiles: 131
                  PythonLoc: 11947
                  XmlFiles: 3
                  XmlLoc: 36
                  YamlFiles: 89
                  YamlLoc: 3336
  /add_appcodecomposition:
    description: Add new appcodecomposition in bulk or as a single entity.
    post:
      tags:
        - AppCodeComposition
      summary: Add AppCodeComposition
      security:
        - oAuth2ClientCredentials:
          - write:appcodecomposition
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AddDate:
                  type: string
                  format: date-time
                  description: The AddDate for the appcodecomposition.
                ApplicationID:
                  type: integer
                  format: int32
                  description: The ApplicationID for the appcodecomposition.
                JavaFiles:
                  type: integer
                  format: int32
                  description: The JavaFiles for the appcodecomposition.
                JavaLoc:
                  type: integer
                  format: int32
                  description: The JavaLoc for the appcodecomposition.
                XmlFiles:
                  type: integer
                  format: int32
                  description: The XmlFiles for the appcodecomposition.
                XmlLoc:
                  type: integer
                  format: int32
                  description: The XmlLoc for the appcodecomposition.
                JsonFiles:
                  type: integer
                  format: int32
                  description: The JsonFiles for the appcodecomposition.
                JsonLoc:
                  type: integer
                  format: int32
                  description: The JsonLoc for the appcodecomposition.
                YamlFiles:
                  type: integer
                  format: int32
                  description: The YamlFiles for the appcodecomposition.
                YamlLoc:
                  type: integer
                  format: int32
                  description: The YamlLoc for the appcodecomposition.
                ConfFiles:
                  type: integer
                  format: int32
                  description: The ConfFiles for the appcodecomposition.
                ConfLoc:
                  type: integer
                  format: int32
                  description: The ConfLoc for the appcodecomposition.
                PythonFiles:
                  type: integer
                  format: int32
                  description: The PythonFiles for the appcodecomposition.
                PythonLoc:
                  type: integer
                  format: int32
                  description: The PythonLoc for the appcodecomposition.
                PerlFiles:
                  type: integer
                  format: int32
                  description: The PerlFiles for the appcodecomposition.
                PerlLoc:
                  type: integer
                  format: int32
                  description: The PerlLoc for the appcodecomposition.
                CFiles:
                  type: integer
                  format: int32
                  description: The CFiles for the appcodecomposition.
                CLoc:
                  type: integer
                  format: int32
                  description: The CLoc for the appcodecomposition.
                GoFiles:
                  type: integer
                  format: int32
                  description: The GoFiles for the appcodecomposition.
                GoLoc:
                  type: integer
                  format: int32
                  description: The GoLoc for the appcodecomposition.
                JavascriptFiles:
                  type: integer
                  format: int32
                  description: The JavascriptFiles for the appcodecomposition.
                JavascriptLoc:
                  type: integer
                  format: int32
                  description: The JavascriptLoc for the appcodecomposition.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the appcodecomposition.
              example:
                ID: 16
  /delete_appcodecomposition:
    description: Delete the AppCodeComposition that match the property filters.
    post:
      tags:
        - AppCodeComposition
      summary: Delete AppCodeComposition
      security:
        - oAuth2ClientCredentials:
          - write:appcodecomposition
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppCodeComposition'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_appcodecomposition:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - AppCodeComposition
      summary: Edit AppCodeComposition
      security:
        - oAuth2ClientCredentials:
          - write:appcodecomposition
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/AppCodeComposition'
                values:
                  $ref: '#/components/schemas/AppCodeComposition'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited AppCodeComposition.
              example:
                ID: 5
  /search_appcodecomposition:
    description: Search for appcodecomposition that match the properties filter(s).
    post:
      tags:
        - AppCodeComposition
      summary: Search AppCodeComposition
      security:
        - oAuth2ClientCredentials:
          - read:appcodecomposition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppCodeComposition'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppCodeComposition'
              example:
                - AddDate: '2022-12-29T16:56:03'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '1'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '22'
                  JavascriptLoc: '28916'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '131'
                  PythonLoc: '11947'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2022-12-29T23:13:50'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '2'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '22'
                  JavascriptLoc: '28916'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '131'
                  PythonLoc: '11947'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2022-12-30T00:13:51'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '3'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '22'
                  JavascriptLoc: '28916'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '131'
                  PythonLoc: '11947'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2022-12-30T00:41:15'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '4'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '22'
                  JavascriptLoc: '28916'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '131'
                  PythonLoc: '11947'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2022-12-30T00:48:25'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '5'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '22'
                  JavascriptLoc: '28916'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '131'
                  PythonLoc: '11947'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2022-12-30T00:57:37'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '6'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '22'
                  JavascriptLoc: '28916'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '131'
                  PythonLoc: '11947'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2022-12-30T04:05:18'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '7'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '22'
                  JavascriptLoc: '28916'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '131'
                  PythonLoc: '11947'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2022-12-30T04:51:24'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '8'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '22'
                  JavascriptLoc: '28916'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '131'
                  PythonLoc: '11947'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2022-12-30T17:32:43'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '9'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '137'
                  PythonLoc: '12751'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2022-12-30T18:30:16'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '10'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '137'
                  PythonLoc: '12751'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-01T07:13:50'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '11'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '137'
                  PythonLoc: '13045'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-01T18:11:44'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '12'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '137'
                  PythonLoc: '13053'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-02T22:26:49'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '13'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '138'
                  PythonLoc: '13259'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-03T04:37:35'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '14'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '138'
                  PythonLoc: '13259'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-03T21:00:22'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '15'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '138'
                  PythonLoc: '13259'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-04T00:13:28'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '16'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '138'
                  PythonLoc: '13259'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-04T00:44:41'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '17'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '138'
                  PythonLoc: '13259'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-04T01:30:04'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '18'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '138'
                  PythonLoc: '13259'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-04T19:11:02'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '19'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '138'
                  PythonLoc: '13259'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-05T01:05:26'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '20'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34601'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '138'
                  PythonLoc: '13259'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-21T01:08:16'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '21'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '23'
                  JavascriptLoc: '34614'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '168'
                  PythonLoc: '16429'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
                - AddDate: '2023-01-21T23:49:28'
                  ApplicationID: '4'
                  CFiles: 'None'
                  CLoc: 'None'
                  ConfFiles: '3'
                  ConfLoc: '287'
                  GoFiles: 'None'
                  GoLoc: 'None'
                  ID: '22'
                  JavaFiles: 'None'
                  JavaLoc: 'None'
                  JavascriptFiles: '22'
                  JavascriptLoc: '28916'
                  JsonFiles: '5'
                  JsonLoc: '62625'
                  PerlFiles: 'None'
                  PerlLoc: 'None'
                  PythonFiles: '131'
                  PythonLoc: '11947'
                  XmlFiles: '3'
                  XmlLoc: '36'
                  YamlFiles: '89'
                  YamlLoc: '3336'
  /buildartifacts:
    description: List all buildartifacts within the current permissions scope.
    get:
      tags:
        - BuildArtifacts
      summary: List BuildArtifacts
      security:
        - oAuth2ClientCredentials:
          - read:buildartifacts
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildArtifacts'
              example:
                - AddDate: "2023-01-21T00:00:00"
                  ArtifactName: "report.json"
                  ID: 2
                  PipelineJobID: 4
                  Url: "http://127.0.0.1/report.json"
  /add_buildartifacts:
    description: Add new buildartifacts in bulk or as a single entity.
    post:
      tags:
        - BuildArtifacts
      summary: Add BuildArtifacts
      security:
        - oAuth2ClientCredentials:
          - write:buildartifacts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AddDate:
                  type: string
                  format: date-time
                  description: The AddDate for the buildartifacts.
                PipelineJobID:
                  type: integer
                  format: int32
                  description: The PipelineJobID for the buildartifacts.
                ArtifactName:
                  type: string
                  description: The ArtifactName for the buildartifacts.
                Url:
                  type: string
                  description: The Url for the buildartifacts.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the buildartifacts.
              example:
                ID: 16
  /delete_buildartifacts:
    description: Delete the BuildArtifacts that match the property filters.
    post:
      tags:
        - BuildArtifacts
      summary: Delete BuildArtifacts
      security:
        - oAuth2ClientCredentials:
          - write:buildartifacts
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildArtifacts'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_buildartifacts:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - BuildArtifacts
      summary: Edit BuildArtifacts
      security:
        - oAuth2ClientCredentials:
          - write:buildartifacts
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/BuildArtifacts'
                values:
                  $ref: '#/components/schemas/BuildArtifacts'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited BuildArtifacts.
              example:
                ID: 5
  /search_buildartifacts:
    description: Search for buildartifacts that match the properties filter(s).
    post:
      tags:
        - BuildArtifacts
      summary: Search BuildArtifacts
      security:
        - oAuth2ClientCredentials:
          - read:buildartifacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildArtifacts'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildArtifacts'
              example:
                - AddDate: '2023-01-22T00:07:32'
                  ArtifactName: 'test-report.json'
                  ID: '3'
                  PipelineJobID: '5'
                  Url: 'http://127.0.0.1/test-report.json'
  /gitrepo:
    description: List all gitrepo within the current permissions scope.
    get:
      tags:
        - GitRepo
      summary: List GitRepo
      security:
        - oAuth2ClientCredentials:
          - read:gitrepo
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepo'
              example:
                - AddDate: "2022-11-30T06:50:00"
                  ApplicationID: 4
                  ID: 1
                  RepoName: "TestRepo"
                  RepoUrl: "https://github.com/TestRepo"
                  Source: "GitHub"
  /add_gitrepo:
    description: Add new gitrepo in bulk or as a single entity.
    post:
      tags:
        - GitRepo
      summary: Add GitRepo
      security:
        - oAuth2ClientCredentials:
          - write:gitrepo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AddDate:
                  type: string
                  format: date-time
                  description: The AddDate for the gitrepo.
                Source:
                  type: string
                  description: The Source for the gitrepo.
                RepoName:
                  type: string
                  description: The RepoName for the gitrepo.
                RepoUrl:
                  type: string
                  description: The RepoUrl for the gitrepo.
                ApplicationID:
                  type: integer
                  format: int32
                  description: The ApplicationID for the gitrepo.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the gitrepo.
              example:
                ID: 16
  /delete_gitrepo:
    description: Delete the GitRepo that match the property filters.
    post:
      tags:
        - GitRepo
      summary: Delete GitRepo
      security:
        - oAuth2ClientCredentials:
          - write:gitrepo
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitRepo'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_gitrepo:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - GitRepo
      summary: Edit GitRepo
      security:
        - oAuth2ClientCredentials:
          - write:gitrepo
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/GitRepo'
                values:
                  $ref: '#/components/schemas/GitRepo'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited GitRepo.
              example:
                ID: 5
  /search_gitrepo:
    description: Search for gitrepo that match the properties filter(s).
    post:
      tags:
        - GitRepo
      summary: Search GitRepo
      security:
        - oAuth2ClientCredentials:
          - read:gitrepo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GitRepo'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GitRepo'
              example:
                - AddDate: 'None'
                  ApplicationID: '4'
                  ID: '2'
                  RepoName: 'TestRepo1'
                  RepoUrl: 'https://github.com/TestRepo1'
                  Source: 'GitHub'
  /importedcode:
    description: List all importedcode within the current permissions scope.
    get:
      tags:
        - ImportedCode
      summary: List ImportedCode
      security:
        - oAuth2ClientCredentials:
          - read:importedcode
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedCode'
              example:
                - AddDate: "2022-12-15T00:00:00"
                  ApplicationID: 4
                  ID: 1
                  ImportFile: "mysql-connector:2.2.9"
                  ImportMethod: "pypi"
                  PackageName: "mysql-connector"
                  PackageVersion: "2.2.9"
                  Status: "Installed"
  /add_importedcode:
    description: Add new importedcode in bulk or as a single entity.
    post:
      tags:
        - ImportedCode
      summary: Add ImportedCode
      security:
        - oAuth2ClientCredentials:
          - write:importedcode
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AddDate:
                  type: string
                  format: date-time
                  description: The AddDate for the importedcode.
                ApplicationID:
                  type: integer
                  format: int32
                  description: The ApplicationID for the importedcode.
                PackageName:
                  type: string
                  description: The PackageName for the importedcode.
                PackageVersion:
                  type: string
                  description: The PackageVersion for the importedcode.
                ImportMethod:
                  type: string
                  description: The ImportMethod for the importedcode.
                ImportFile:
                  type: string
                  description: The ImportFile for the importedcode.
                Status:
                  type: string
                  description: The Status for the importedcode.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the importedcode.
              example:
                ID: 16
  /delete_importedcode:
    description: Delete the ImportedCode that match the property filters.
    post:
      tags:
        - ImportedCode
      summary: Delete ImportedCode
      security:
        - oAuth2ClientCredentials:
          - write:importedcode
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportedCode'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_importedcode:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - ImportedCode
      summary: Edit ImportedCode
      security:
        - oAuth2ClientCredentials:
          - write:importedcode
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/ImportedCode'
                values:
                  $ref: '#/components/schemas/ImportedCode'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited ImportedCode.
              example:
                ID: 5
  /search_importedcode:
    description: Search for importedcode that match the properties filter(s).
    post:
      tags:
        - ImportedCode
      summary: Search ImportedCode
      security:
        - oAuth2ClientCredentials:
          - read:importedcode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportedCode'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportedCode'
              example:
                - AddDate: '2023-01-22T00:37:44'
                  ApplicationID: '4'
                  ID: '2'
                  ImportFile: 'mysql-connector:2.2.8'
                  ImportMethod: 'pypi'
                  PackageName: 'mysql-connector'
                  PackageVersion: '2.2.8'
                  Status: 'Installed'
  /vulnerabilityscans:
    description: List all vulnerabilityscans within the current permissions scope.
    get:
      tags:
        - VulnerabilityScans
      summary: List VulnerabilityScans
      security:
        - oAuth2ClientCredentials:
          - read:vulnerabilityscans
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityScans'
              example:
                - ApplicationId: 4
                  ID: 195
                  IntegrationID: ""
                  ScanEndDate: ""
                  ScanName: "Trufflehog-CI_CD"
                  ScanStartDate: "2023-01-05T01:07:27"
                  ScanTargets: "4"
                  ScanType: "CI/CD"
  /add_vulnerabilityscans:
    description: Add new vulnerabilityscans in bulk or as a single entity.
    post:
      tags:
        - VulnerabilityScans
      summary: Add VulnerabilityScans
      security:
        - oAuth2ClientCredentials:
          - write:vulnerabilityscans
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ScanName:
                  type: string
                  description: The ScanName for the vulnerabilityscans.
                ScanType:
                  type: string
                  description: The ScanType for the vulnerabilityscans.
                ScanTargets:
                  type: string
                  description: The ScanTargets for the vulnerabilityscans.
                ScanStartDate:
                  type: string
                  format: date-time
                  description: The ScanStartDate for the vulnerabilityscans.
                ScanEndDate:
                  type: string
                  format: date-time
                  description: The ScanEndDate for the vulnerabilityscans.
                IntegrationID:
                  type: integer
                  format: int32
                  description: The IntegrationID for the vulnerabilityscans.
                ApplicationId:
                  type: integer
                  format: int32
                  description: The ApplicationId for the vulnerabilityscans.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the vulnerabilityscans.
              example:
                ID: 16
  /delete_vulnerabilityscans:
    description: Delete the VulnerabilityScans that match the property filters.
    post:
      tags:
        - VulnerabilityScans
      summary: Delete VulnerabilityScans
      security:
        - oAuth2ClientCredentials:
          - write:vulnerabilityscans
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnerabilityScans'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_vulnerabilityscans:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - VulnerabilityScans
      summary: Edit VulnerabilityScans
      security:
        - oAuth2ClientCredentials:
          - write:vulnerabilityscans
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/VulnerabilityScans'
                values:
                  $ref: '#/components/schemas/VulnerabilityScans'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited VulnerabilityScans.
              example:
                ID: 5
  /search_vulnerabilityscans:
    description: Search for vulnerabilityscans that match the properties filter(s).
    post:
      tags:
        - VulnerabilityScans
      summary: Search VulnerabilityScans
      security:
        - oAuth2ClientCredentials:
          - read:vulnerabilityscans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnerabilityScans'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityScans'
              example:
                - ApplicationId: '4'
                  ID: '195'
                  IntegrationID: '1'
                  ScanEndDate: 'None'
                  ScanName: 'Trufflehog-CI_CD'
                  ScanStartDate: '2023-01-05T01:07:27'
                  ScanTargets: '4'
                  ScanType: 'CI/CD'
                - ApplicationId: '4'
                  ID: '201'
                  IntegrationID: '1'
                  ScanEndDate: 'None'
                  ScanName: 'Trufflehog-CI_CD'
                  ScanStartDate: '2023-01-21T01:10:17'
                  ScanTargets: '4'
                  ScanType: 'CI/CD'
                - ApplicationId: '4'
                  ID: '207'
                  IntegrationID: '1'
                  ScanEndDate: 'None'
                  ScanName: 'Trufflehog-CI_CD'
                  ScanStartDate: '2023-01-05T01:07:27'
                  ScanTargets: '4'
                  ScanType: 'CI/CD'
  /vulnerabilityremediation:
    description: List all vulnerabilityremediation within the current permissions scope.
    get:
      tags:
        - VulnerabilityRemediation
      summary: List VulnerabilityRemediation
      security:
        - oAuth2ClientCredentials:
          - read:vulnerabilityremediation
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityRemediation'
              example:
                - CloseDate: "2023-01-21T12:00:00"
                  ClosedBy: "1"
                  ID: 1
                  OpenDate: "2023-01-21T12:00:00"
                  Priority: "High"
                  Status: "Closed"
                  TechnologyID: 1
                  VulnerabilityID: 18584
  /add_vulnerabilityremediation:
    description: Add new vulnerabilityremediation in bulk or as a single entity.
    post:
      tags:
        - VulnerabilityRemediation
      summary: Add VulnerabilityRemediation
      security:
        - oAuth2ClientCredentials:
          - write:vulnerabilityremediation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                VulnerabilityID:
                  type: integer
                  format: int32
                  description: The VulnerabilityID for the vulnerabilityremediation.
                TechnologyID:
                  type: integer
                  format: int32
                  description: The TechnologyID for the vulnerabilityremediation.
                OpenDate:
                  type: string
                  format: date-time
                  description: The OpenDate for the vulnerabilityremediation.
                Status:
                  type: string
                  description: The Status for the vulnerabilityremediation.
                Priority:
                  type: string
                  description: The Priority for the vulnerabilityremediation.
                CloseDate:
                  type: string
                  format: date-time
                  description: The CloseDate for the vulnerabilityremediation.
                ClosedBy:
                  type: string
                  description: The ClosedBy for the vulnerabilityremediation.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the vulnerabilityremediation.
              example:
                ID: 16
  /delete_vulnerabilityremediation:
    description: Delete the VulnerabilityRemediation that match the property filters.
    post:
      tags:
        - VulnerabilityRemediation
      summary: Delete VulnerabilityRemediation
      security:
        - oAuth2ClientCredentials:
          - write:vulnerabilityremediation
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnerabilityRemediation'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_vulnerabilityremediation:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - VulnerabilityRemediation
      summary: Edit VulnerabilityRemediation
      security:
        - oAuth2ClientCredentials:
          - write:vulnerabilityremediation
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/VulnerabilityRemediation'
                values:
                  $ref: '#/components/schemas/VulnerabilityRemediation'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited VulnerabilityRemediation.
              example:
                ID: 5
  /search_vulnerabilityremediation:
    description: Search for vulnerabilityremediation that match the properties filter(s).
    post:
      tags:
        - VulnerabilityRemediation
      summary: Search VulnerabilityRemediation
      security:
        - oAuth2ClientCredentials:
          - read:vulnerabilityremediation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnerabilityRemediation'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityRemediation'
              example:
                - CloseDate: '2023-01-21T12:00:00'
                  ClosedBy: '1'
                  ID: '1'
                  OpenDate: '2023-01-21T12:00:00'
                  Priority: 'High'
                  Status: 'Closed'
                  TechnologyID: '1'
                  VulnerabilityID: '18584'
                - CloseDate: '2023-01-21T12:00:00'
                  ClosedBy: '1'
                  ID: '2'
                  OpenDate: '2023-01-21T12:00:00'
                  Priority: 'High'
                  Status: 'Closed'
                  TechnologyID: '1'
                  VulnerabilityID: '18584'
  /cvssbasescores:
    description: List all cvssbasescores within the current permissions scope.
    get:
      tags:
        - CVSSBaseScores
      summary: List CVSSBaseScores
      security:
        - oAuth2ClientCredentials:
          - read:cvssbasescores
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScores'
              example:
                - AccessComplexity: "Low"
                  AccessVector: "Network"
                  Authentication: "Single"
                  AvailabilityImpact: "None"
                  CVSSBaseScore: 6.8
                  CVSSEnvironmentalScore: 6.8
                  CVSSTemporalScore: 6.8
                  CollateralDamagePotential: ""
                  ConfidentialityImpact: "Partial"
                  Exploitability: ""
                  GeneratedOn: "2023-01-21T12:00:00"
                  ID: 1
                  ImpactBias: ""
                  IntegrityImpact: "Partial"
                  OverallCVSSScore: 6.8
                  RemediationLevel: ""
                  ReportConfidence: ""
                  TargetDistribution: ""
                  VulnerabilityID: 18584
  /add_cvssbasescores:
    description: Add new cvssbasescores in bulk or as a single entity.
    post:
      tags:
        - CVSSBaseScores
      summary: Add CVSSBaseScores
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescores
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                VulnerabilityID:
                  type: integer
                  format: int32
                  description: The VulnerabilityID for the cvssbasescores.
                GeneratedOn:
                  type: string
                  format: date-time
                  description: The GeneratedOn for the cvssbasescores.
                OverallCVSSScore:
                  type: number
                  format: float
                  description: The OverallCVSSScore for the cvssbasescores.
                CVSSBaseScore:
                  type: number
                  format: float
                  description: The CVSSBaseScore for the cvssbasescores.
                CVSSTemporalScore:
                  type: number
                  format: float
                  description: The CVSSTemporalScore for the cvssbasescores.
                CVSSEnvironmentalScore:
                  type: number
                  format: float
                  description: The CVSSEnvironmentalScore for the cvssbasescores.
                AccessVector:
                  type: string
                  description: The AccessVector for the cvssbasescores.
                AccessComplexity:
                  type: string
                  description: The AccessComplexity for the cvssbasescores.
                Authentication:
                  type: string
                  description: The Authentication for the cvssbasescores.
                ConfidentialityImpact:
                  type: string
                  description: The ConfidentialityImpact for the cvssbasescores.
                IntegrityImpact:
                  type: string
                  description: The IntegrityImpact for the cvssbasescores.
                AvailabilityImpact:
                  type: string
                  description: The AvailabilityImpact for the cvssbasescores.
                ImpactBias:
                  type: string
                  description: The ImpactBias for the cvssbasescores.
                CollateralDamagePotential:
                  type: string
                  description: The CollateralDamagePotential for the cvssbasescores.
                TargetDistribution:
                  type: string
                  description: The TargetDistribution for the cvssbasescores.
                Exploitability:
                  type: string
                  description: The Exploitability for the cvssbasescores.
                RemediationLevel:
                  type: string
                  description: The RemediationLevel for the cvssbasescores.
                ReportConfidence:
                  type: string
                  description: The ReportConfidence for the cvssbasescores.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the cvssbasescores.
              example:
                ID: 16
  /delete_cvssbasescores:
    description: Delete the CVSSBaseScores that match the property filters.
    post:
      tags:
        - CVSSBaseScores
      summary: Delete CVSSBaseScores
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescores
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVSSBaseScores'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_cvssbasescores:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - CVSSBaseScores
      summary: Edit CVSSBaseScores
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescores
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/CVSSBaseScores'
                values:
                  $ref: '#/components/schemas/CVSSBaseScores'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited CVSSBaseScores.
              example:
                ID: 5
  /search_cvssbasescores:
    description: Search for cvssbasescores that match the properties filter(s).
    post:
      tags:
        - CVSSBaseScores
      summary: Search CVSSBaseScores
      security:
        - oAuth2ClientCredentials:
          - read:cvssbasescores
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVSSBaseScores'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScores'
              example:
                - AccessComplexity: 'Low'
                  AccessVector: 'Network'
                  Authentication: 'Single'
                  AvailabilityImpact: 'None'
                  CVSSBaseScore: '6.8'
                  CVSSEnvironmentalScore: '6.8'
                  CVSSTemporalScore: '6.8'
                  CollateralDamagePotential: 'None'
                  ConfidentialityImpact: 'Partial'
                  Exploitability: 'None'
                  GeneratedOn: '2023-01-21T12:00:00'
                  ID: '1'
                  ImpactBias: 'None'
                  IntegrityImpact: 'Partial'
                  OverallCVSSScore: '6.8'
                  RemediationLevel: 'None'
                  ReportConfidence: 'None'
                  TargetDistribution: 'None'
                  VulnerabilityID: '18584'
                - AccessComplexity: 'Low'
                  AccessVector: 'Network'
                  Authentication: 'Single'
                  AvailabilityImpact: 'None'
                  CVSSBaseScore: '6.8'
                  CVSSEnvironmentalScore: '6.8'
                  CVSSTemporalScore: '6.8'
                  CollateralDamagePotential: 'None'
                  ConfidentialityImpact: 'Partial'
                  Exploitability: 'None'
                  GeneratedOn: '2023-01-21T12:00:00'
                  ID: '2'
                  ImpactBias: 'None'
                  IntegrityImpact: 'Partial'
                  OverallCVSSScore: '6.8'
                  RemediationLevel: 'None'
                  ReportConfidence: 'None'
                  TargetDistribution: 'None'
                  VulnerabilityID: '18584'
  /cvssbasescoresv2:
    description: List all cvssbasescoresv2 within the current permissions scope.
    get:
      tags:
        - CVSSBaseScoresV2
      summary: List CVSSBaseScoresV2
      security:
        - oAuth2ClientCredentials:
          - read:cvssbasescoresv2
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScoresV2'
              example:
                - ID: 1
                  VulnerabilityID: 18584
                  cvssV2acInsufInfo: ""
                  cvssV2accessComplexity: "Medium"
                  cvssV2accessVector: "Network"
                  cvssV2authentication: "None"
                  cvssV2availabilityImpact: 4.3
                  cvssV2baseScore: 4.3
                  cvssV2confidentialityImpact: "Partial"
                  cvssV2exploitabilityScore: 4.3
                  cvssV2impactScore: 4.3
                  cvssV2integrityImpact: "None"
                  cvssV2obtainAllPrivilege: ""
                  cvssV2obtainOtherPrivilege: ""
                  cvssV2obtainUserPrivilege: ""
                  cvssV2severity: ""
                  cvssV2userInteractionRequired: ""
                  cvssV2vectorString: ""
  /add_cvssbasescoresv2:
    description: Add new cvssbasescoresv2 in bulk or as a single entity.
    post:
      tags:
        - CVSSBaseScoresV2
      summary: Add CVSSBaseScoresV2
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv2
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                VulnerabilityID:
                  type: integer
                  format: int32
                  description: The VulnerabilityID for the cvssbasescoresv2.
                cvssV2vectorString:
                  type: string
                  description: The cvssV2vectorString for the cvssbasescoresv2.
                cvssV2accessVector:
                  type: string
                  description: The cvssV2accessVector for the cvssbasescoresv2.
                cvssV2accessComplexity:
                  type: string
                  description: The cvssV2accessComplexity for the cvssbasescoresv2.
                cvssV2authentication:
                  type: string
                  description: The cvssV2authentication for the cvssbasescoresv2.
                cvssV2confidentialityImpact:
                  type: string
                  description: The cvssV2confidentialityImpact for the cvssbasescoresv2.
                cvssV2integrityImpact:
                  type: string
                  description: The cvssV2integrityImpact for the cvssbasescoresv2.
                cvssV2availabilityImpact:
                  type: number
                  format: float
                  description: The cvssV2availabilityImpact for the cvssbasescoresv2.
                cvssV2baseScore:
                  type: number
                  format: float
                  description: The cvssV2baseScore for the cvssbasescoresv2.
                cvssV2severity:
                  type: string
                  description: The cvssV2severity for the cvssbasescoresv2.
                cvssV2exploitabilityScore:
                  type: number
                  format: float
                  description: The cvssV2exploitabilityScore for the cvssbasescoresv2.
                cvssV2impactScore:
                  type: number
                  format: float
                  description: The cvssV2impactScore for the cvssbasescoresv2.
                cvssV2acInsufInfo:
                  type: string
                  description: The cvssV2acInsufInfo for the cvssbasescoresv2.
                cvssV2obtainAllPrivilege:
                  type: string
                  description: The cvssV2obtainAllPrivilege for the cvssbasescoresv2.
                cvssV2obtainUserPrivilege:
                  type: string
                  description: The cvssV2obtainUserPrivilege for the cvssbasescoresv2.
                cvssV2obtainOtherPrivilege:
                  type: string
                  description: The cvssV2obtainOtherPrivilege for the cvssbasescoresv2.
                cvssV2userInteractionRequired:
                  type: string
                  description: The cvssV2userInteractionRequired for the cvssbasescoresv2.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the cvssbasescoresv2.
              example:
                ID: 16
  /delete_cvssbasescoresv2:
    description: Delete the CVSSBaseScoresV2 that match the property filters.
    post:
      tags:
        - CVSSBaseScoresV2
      summary: Delete CVSSBaseScoresV2
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv2
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVSSBaseScoresV2'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_cvssbasescoresv2:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - CVSSBaseScoresV2
      summary: Edit CVSSBaseScoresV2
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv2
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/CVSSBaseScoresV2'
                values:
                  $ref: '#/components/schemas/CVSSBaseScoresV2'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited CVSSBaseScoresV2.
              example:
                ID: 5
  /search_cvssbasescoresv2:
    description: Search for cvssbasescoresv2 that match the properties filter(s).
    post:
      tags:
        - CVSSBaseScoresV2
      summary: Search CVSSBaseScoresV2
      security:
        - oAuth2ClientCredentials:
          - read:cvssbasescoresv2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVSSBaseScoresV2'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScoresV2'
              example:
                - ID: '1'
                  VulnerabilityID: '18584'
                  cvssV2acInsufInfo: 'None'
                  cvssV2accessComplexity: 'Medium'
                  cvssV2accessVector: 'Network'
                  cvssV2authentication: 'None'
                  cvssV2availabilityImpact: '4.3'
                  cvssV2baseScore: '4.3'
                  cvssV2confidentialityImpact: 'Partial'
                  cvssV2exploitabilityScore: '4.3'
                  cvssV2impactScore: '4.3'
                  cvssV2integrityImpact: 'None'
                  cvssV2obtainAllPrivilege: 'None'
                  cvssV2obtainOtherPrivilege: 'None'
                  cvssV2obtainUserPrivilege: 'None'
                  cvssV2severity: 'None'
                  cvssV2userInteractionRequired: 'None'
                  cvssV2vectorString: 'None'
                - ID: '2'
                  VulnerabilityID: '18584'
                  cvssV2acInsufInfo: ''
                  cvssV2accessComplexity: 'Medium'
                  cvssV2accessVector: 'Network'
                  cvssV2authentication: 'None'
                  cvssV2availabilityImpact: '4.3'
                  cvssV2baseScore: '4.3'
                  cvssV2confidentialityImpact: 'Partial'
                  cvssV2exploitabilityScore: '4.3'
                  cvssV2impactScore: '4.3'
                  cvssV2integrityImpact: 'None'
                  cvssV2obtainAllPrivilege: ''
                  cvssV2obtainOtherPrivilege: ''
                  cvssV2obtainUserPrivilege: ''
                  cvssV2severity: ''
                  cvssV2userInteractionRequired: ''
                  cvssV2vectorString: ''
  /cvssbasescoresv2extensions:
    description: List all cvssbasescoresv2extensions within the current permissions scope.
    get:
      tags:
        - CVSSBaseScoresV2Extensions
      summary: List CVSSBaseScoresV2Extensions
      security:
        - oAuth2ClientCredentials:
          - read:cvssbasescoresv2extensions
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScoresV2Extensions'
              example:
                - ID: 1
                  TechnologyID: 1
                  VulnerabilityID: 18584
                  cvssV2adjustedImpactScore: 6.3
                  cvssV2adjustedTemporalScore: 6.1
                  cvssV2availabilityRequirements: "Medium"
                  cvssV2collateralDamagePotential: "Low"
                  cvssV2confidentialityRequirements: "Low"
                  cvssV2environmentalScore: 5.3
                  cvssV2integrityRequirements: "Low"
                  cvssV2remediationLevel: "Low"
                  cvssV2reportConfidence: "Medium"
                  cvssV2targetDistribution: "Medium"
                  cvssV2temporalScore: 6.2
  /add_cvssbasescoresv2extensions:
    description: Add new cvssbasescoresv2extensions in bulk or as a single entity.
    post:
      tags:
        - CVSSBaseScoresV2Extensions
      summary: Add CVSSBaseScoresV2Extensions
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv2extensions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                VulnerabilityID:
                  type: integer
                  format: int32
                  description: The VulnerabilityID for the cvssbasescoresv2extensions.
                TechnologyID:
                  type: integer
                  format: int32
                  description: The TechnologyID for the cvssbasescoresv2extensions.
                cvssV2remediationLevel:
                  type: string
                  description: The cvssV2remediationLevel for the cvssbasescoresv2extensions.
                cvssV2reportConfidence:
                  type: string
                  description: The cvssV2reportConfidence for the cvssbasescoresv2extensions.
                cvssV2temporalScore:
                  type: number
                  format: float
                  description: The cvssV2temporalScore for the cvssbasescoresv2extensions.
                cvssV2collateralDamagePotential:
                  type: string
                  description: The cvssV2collateralDamagePotential for the cvssbasescoresv2extensions.
                cvssV2targetDistribution:
                  type: string
                  description: The cvssV2targetDistribution for the cvssbasescoresv2extensions.
                cvssV2confidentialityRequirements:
                  type: string
                  description: The cvssV2confidentialityRequirements for the cvssbasescoresv2extensions.
                cvssV2integrityRequirements:
                  type: string
                  description: The cvssV2integrityRequirements for the cvssbasescoresv2extensions.
                cvssV2availabilityRequirements:
                  type: string
                  description: The cvssV2availabilityRequirements for the cvssbasescoresv2extensions.
                cvssV2environmentalScore:
                  type: number
                  format: float
                  description: The cvssV2environmentalScore for the cvssbasescoresv2extensions.
                cvssV2adjustedTemporalScore:
                  type: number
                  format: float
                  description: The cvssV2adjustedTemporalScore for the cvssbasescoresv2extensions.
                cvssV2adjustedImpactScore:
                  type: number
                  format: float
                  description: The cvssV2adjustedImpactScore for the cvssbasescoresv2extensions.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the cvssbasescoresv2extensions.
              example:
                ID: 16
  /delete_cvssbasescoresv2extensions:
    description: Delete the CVSSBaseScoresV2Extensions that match the property filters.
    post:
      tags:
        - CVSSBaseScoresV2Extensions
      summary: Delete CVSSBaseScoresV2Extensions
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv2extensions
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVSSBaseScoresV2Extensions'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_cvssbasescoresv2extensions:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - CVSSBaseScoresV2Extensions
      summary: Edit CVSSBaseScoresV2Extensions
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv2extensions
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/CVSSBaseScoresV2Extensions'
                values:
                  $ref: '#/components/schemas/CVSSBaseScoresV2Extensions'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited CVSSBaseScoresV2Extensions.
              example:
                ID: 5
  /search_cvssbasescoresv2extensions:
    description: Search for cvssbasescoresv2extensions that match the properties filter(s).
    post:
      tags:
        - CVSSBaseScoresV2Extensions
      summary: Search CVSSBaseScoresV2Extensions
      security:
        - oAuth2ClientCredentials:
          - read:cvssbasescoresv2extensions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVSSBaseScoresV2Extensions'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScoresV2Extensions'
              example:
                - ID: '1'
                  TechnologyID: '1'
                  VulnerabilityID: '18584'
                  cvssV2adjustedImpactScore: '6.3'
                  cvssV2adjustedTemporalScore: '6.1'
                  cvssV2availabilityRequirements: 'Medium'
                  cvssV2collateralDamagePotential: 'Low'
                  cvssV2confidentialityRequirements: 'Low'
                  cvssV2environmentalScore: '5.3'
                  cvssV2integrityRequirements: 'Low'
                  cvssV2remediationLevel: 'Low'
                  cvssV2reportConfidence: 'Medium'
                  cvssV2targetDistribution: 'Medium'
                  cvssV2temporalScore: '6.2'
                - ID: '2'
                  TechnologyID: '1'
                  VulnerabilityID: '18584'
                  cvssV2adjustedImpactScore: '6.3'
                  cvssV2adjustedTemporalScore: '6.1'
                  cvssV2availabilityRequirements: 'Medium'
                  cvssV2collateralDamagePotential: 'Low'
                  cvssV2confidentialityRequirements: 'Low'
                  cvssV2environmentalScore: '5.3'
                  cvssV2integrityRequirements: 'Low'
                  cvssV2remediationLevel: 'Low'
                  cvssV2reportConfidence: 'Medium'
                  cvssV2targetDistribution: 'Medium'
                  cvssV2temporalScore: '6.2'
  /cvssbasescoresv3extensions:
    description: List all cvssbasescoresv3extensions within the current permissions scope.
    get:
      tags:
        - CVSSBaseScoresV3Extensions
      summary: List CVSSBaseScoresV3Extensions
      security:
        - oAuth2ClientCredentials:
          - read:cvssbasescoresv3extensions
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScoresV3Extensions'
              example:
                - ID: 1
                  TechnologyID: 1
                  VulnerabilityID: 18584
                  cvssV3availabilityRequirements: "Low"
                  cvssV3confidentialityRequirements: "Low"
                  cvssV3environmentalScore: 6.5
                  cvssV3exploitCodeMaturity: "Low"
                  cvssV3impactScore: 4.3
                  cvssV3integrityRequirements: "Low"
                  cvssV3remediationLevel: "Low"
                  cvssV3reportConfidence: "Low"
                  cvssV3temporalScore: 7.2
  /add_cvssbasescoresv3extensions:
    description: Add new cvssbasescoresv3extensions in bulk or as a single entity.
    post:
      tags:
        - CVSSBaseScoresV3Extensions
      summary: Add CVSSBaseScoresV3Extensions
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv3extensions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                VulnerabilityID:
                  type: integer
                  format: int32
                  description: The VulnerabilityID for the cvssbasescoresv3extensions.
                TechnologyID:
                  type: integer
                  format: int32
                  description: The TechnologyID for the cvssbasescoresv3extensions.
                cvssV3exploitCodeMaturity:
                  type: string
                  description: The cvssV3exploitCodeMaturity for the cvssbasescoresv3extensions.
                cvssV3remediationLevel:
                  type: string
                  description: The cvssV3remediationLevel for the cvssbasescoresv3extensions.
                cvssV3reportConfidence:
                  type: string
                  description: The cvssV3reportConfidence for the cvssbasescoresv3extensions.
                cvssV3confidentialityRequirements:
                  type: string
                  description: The cvssV3confidentialityRequirements for the cvssbasescoresv3extensions.
                cvssV3integrityRequirements:
                  type: string
                  description: The cvssV3integrityRequirements for the cvssbasescoresv3extensions.
                cvssV3availabilityRequirements:
                  type: string
                  description: The cvssV3availabilityRequirements for the cvssbasescoresv3extensions.
                cvssV3temporalScore:
                  type: number
                  format: float
                  description: The cvssV3temporalScore for the cvssbasescoresv3extensions.
                cvssV3environmentalScore:
                  type: number
                  format: float
                  description: The cvssV3environmentalScore for the cvssbasescoresv3extensions.
                cvssV3impactScore:
                  type: number
                  format: float
                  description: The cvssV3impactScore for the cvssbasescoresv3extensions.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the cvssbasescoresv3extensions.
              example:
                ID: 16
  /delete_cvssbasescoresv3extensions:
    description: Delete the CVSSBaseScoresV3Extensions that match the property filters.
    post:
      tags:
        - CVSSBaseScoresV3Extensions
      summary: Delete CVSSBaseScoresV3Extensions
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv3extensions
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVSSBaseScoresV3Extensions'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_cvssbasescoresv3extensions:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - CVSSBaseScoresV3Extensions
      summary: Edit CVSSBaseScoresV3Extensions
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv3extensions
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/CVSSBaseScoresV3Extensions'
                values:
                  $ref: '#/components/schemas/CVSSBaseScoresV3Extensions'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited CVSSBaseScoresV3Extensions.
              example:
                ID: 5
  /search_cvssbasescoresv3extensions:
    description: Search for cvssbasescoresv3extensions that match the properties filter(s).
    post:
      tags:
        - CVSSBaseScoresV3Extensions
      summary: Search CVSSBaseScoresV3Extensions
      security:
        - oAuth2ClientCredentials:
          - read:cvssbasescoresv3extensions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVSSBaseScoresV3Extensions'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScoresV3Extensions'
              example:
                - ID: '1'
                  TechnologyID: '1'
                  VulnerabilityID: '18584'
                  cvssV3availabilityRequirements: 'Low'
                  cvssV3confidentialityRequirements: 'Low'
                  cvssV3environmentalScore: '6.5'
                  cvssV3exploitCodeMaturity: 'Low'
                  cvssV3impactScore: '4.3'
                  cvssV3integrityRequirements: 'Low'
                  cvssV3remediationLevel: 'Low'
                  cvssV3reportConfidence: 'Low'
                  cvssV3temporalScore: '7.2'
                - ID: '2'
                  TechnologyID: '1'
                  VulnerabilityID: '18584'
                  cvssV3availabilityRequirements: 'Low'
                  cvssV3confidentialityRequirements: 'Low'
                  cvssV3environmentalScore: '6.5'
                  cvssV3exploitCodeMaturity: 'Low'
                  cvssV3impactScore: '4.3'
                  cvssV3integrityRequirements: 'Low'
                  cvssV3remediationLevel: 'Low'
                  cvssV3reportConfidence: 'Low'
                  cvssV3temporalScore: '7.2'
  /cvssbasescoresv3:
    description: List all cvssbasescoresv3 within the current permissions scope.
    get:
      tags:
        - CVSSBaseScoresV3
      summary: List CVSSBaseScoresV3
      security:
        - oAuth2ClientCredentials:
          - read:cvssbasescoresv3
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScoresV3'
              example:
                - ID: 1
                  VulnerabilityID: 18584
                  cvssV3attackComplexity: "High"
                  cvssV3attackVector: "Network"
                  cvssV3availabilityImpact: "None"
                  cvssV3baseScore: 7.1
                  cvssV3baseSeverity: "Low"
                  cvssV3confidentialityImpact: "Low"
                  cvssV3exploitabilityScore: 5.9
                  cvssV3impactScore: 4.3
                  cvssV3integrityImpact: "None"
                  cvssV3privilegesRequired: "None"
                  cvssV3scope: "Unchanged"
                  cvssV3userInteraction: "Required"
                  cvssV3vectorString: ""
  /add_cvssbasescoresv3:
    description: Add new cvssbasescoresv3 in bulk or as a single entity.
    post:
      tags:
        - CVSSBaseScoresV3
      summary: Add CVSSBaseScoresV3
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv3
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                VulnerabilityID:
                  type: integer
                  format: int32
                  description: The VulnerabilityID for the cvssbasescoresv3.
                cvssV3vectorString:
                  type: string
                  description: The cvssV3vectorString for the cvssbasescoresv3.
                cvssV3attackVector:
                  type: string
                  description: The cvssV3attackVector for the cvssbasescoresv3.
                cvssV3attackComplexity:
                  type: string
                  description: The cvssV3attackComplexity for the cvssbasescoresv3.
                cvssV3privilegesRequired:
                  type: string
                  description: The cvssV3privilegesRequired for the cvssbasescoresv3.
                cvssV3userInteraction:
                  type: string
                  description: The cvssV3userInteraction for the cvssbasescoresv3.
                cvssV3scope:
                  type: string
                  description: The cvssV3scope for the cvssbasescoresv3.
                cvssV3confidentialityImpact:
                  type: string
                  description: The cvssV3confidentialityImpact for the cvssbasescoresv3.
                cvssV3integrityImpact:
                  type: string
                  description: The cvssV3integrityImpact for the cvssbasescoresv3.
                cvssV3availabilityImpact:
                  type: string
                  description: The cvssV3availabilityImpact for the cvssbasescoresv3.
                cvssV3baseScore:
                  type: number
                  format: float
                  description: The cvssV3baseScore for the cvssbasescoresv3.
                cvssV3baseSeverity:
                  type: string
                  description: The cvssV3baseSeverity for the cvssbasescoresv3.
                cvssV3exploitabilityScore:
                  type: number
                  format: float
                  description: The cvssV3exploitabilityScore for the cvssbasescoresv3.
                cvssV3impactScore:
                  type: number
                  format: float
                  description: The cvssV3impactScore for the cvssbasescoresv3.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the cvssbasescoresv3.
              example:
                ID: 16
  /delete_cvssbasescoresv3:
    description: Delete the CVSSBaseScoresV3 that match the property filters.
    post:
      tags:
        - CVSSBaseScoresV3
      summary: Delete CVSSBaseScoresV3
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv3
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVSSBaseScoresV3'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_cvssbasescoresv3:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - CVSSBaseScoresV3
      summary: Edit CVSSBaseScoresV3
      security:
        - oAuth2ClientCredentials:
          - write:cvssbasescoresv3
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/CVSSBaseScoresV3'
                values:
                  $ref: '#/components/schemas/CVSSBaseScoresV3'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited CVSSBaseScoresV3.
              example:
                ID: 5
  /search_cvssbasescoresv3:
    description: Search for cvssbasescoresv3 that match the properties filter(s).
    post:
      tags:
        - CVSSBaseScoresV3
      summary: Search CVSSBaseScoresV3
      security:
        - oAuth2ClientCredentials:
          - read:cvssbasescoresv3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVSSBaseScoresV3'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScoresV3'
              example:
                - ID: '1'
                  VulnerabilityID: '18584'
                  cvssV3attackComplexity: 'High'
                  cvssV3attackVector: 'Network'
                  cvssV3availabilityImpact: 'None'
                  cvssV3baseScore: '7.1'
                  cvssV3baseSeverity: 'Low'
                  cvssV3confidentialityImpact: 'Low'
                  cvssV3exploitabilityScore: '5.9'
                  cvssV3impactScore: '4.3'
                  cvssV3integrityImpact: 'None'
                  cvssV3privilegesRequired: 'None'
                  cvssV3scope: 'Unchanged'
                  cvssV3userInteraction: 'Required'
                  cvssV3vectorString: 'None'
                - ID: '2'
                  VulnerabilityID: '18584'
                  cvssV3attackComplexity: 'High'
                  cvssV3attackVector: 'Network'
                  cvssV3availabilityImpact: 'None'
                  cvssV3baseScore: '7.1'
                  cvssV3baseSeverity: 'Low'
                  cvssV3confidentialityImpact: 'Low'
                  cvssV3exploitabilityScore: '5.9'
                  cvssV3impactScore: '4.3'
                  cvssV3integrityImpact: 'None'
                  cvssV3privilegesRequired: 'None'
                  cvssV3scope: 'Unchanged'
                  cvssV3userInteraction: 'Required'
                  cvssV3vectorString: ''
  /sourcecodefile:
    description: List all sourcecodefile within the current permissions scope.
    get:
      tags:
        - SourceCodeFile
      summary: List SourceCodeFile
      security:
        - oAuth2ClientCredentials:
          - read:sourcecodefile
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceCodeFile'
              example:
                - AddDate: "2023-01-21T12:00:00"
                  FileLocation: "testfile.txt"
                  FileName: "testfile.txt"
                  FileType: "Text"
                  GitRepoId: 1
                  ID: 1
  /add_sourcecodefile:
    description: Add new sourcecodefile in bulk or as a single entity.
    post:
      tags:
        - SourceCodeFile
      summary: Add SourceCodeFile
      security:
        - oAuth2ClientCredentials:
          - write:sourcecodefile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AddDate:
                  type: string
                  format: date-time
                  description: The AddDate for the sourcecodefile.
                GitRepoId:
                  type: integer
                  format: int32
                  description: The GitRepoId for the sourcecodefile.
                FileName:
                  type: string
                  description: The FileName for the sourcecodefile.
                FileLocation:
                  type: string
                  description: The FileLocation for the sourcecodefile.
                FileType:
                  type: string
                  description: The FileType for the sourcecodefile.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the sourcecodefile.
              example:
                ID: 16
  /delete_sourcecodefile:
    description: Delete the SourceCodeFile that match the property filters.
    post:
      tags:
        - SourceCodeFile
      summary: Delete SourceCodeFile
      security:
        - oAuth2ClientCredentials:
          - write:sourcecodefile
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCodeFile'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_sourcecodefile:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - SourceCodeFile
      summary: Edit SourceCodeFile
      security:
        - oAuth2ClientCredentials:
          - write:sourcecodefile
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/SourceCodeFile'
                values:
                  $ref: '#/components/schemas/SourceCodeFile'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited SourceCodeFile.
              example:
                ID: 5
  /search_sourcecodefile:
    description: Search for sourcecodefile that match the properties filter(s).
    post:
      tags:
        - SourceCodeFile
      summary: Search SourceCodeFile
      security:
        - oAuth2ClientCredentials:
          - read:sourcecodefile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCodeFile'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceCodeFile'
              example:
                - AddDate: '2023-01-21T12:00:00'
                  FileLocation: 'testfile.txt'
                  FileName: 'testfile.txt'
                  FileType: 'Text'
                  GitRepoId: '1'
                  ID: '1'
                - AddDate: 'None'
                  FileLocation: 'testfile.txt'
                  FileName: 'testfile.txt'
                  FileType: 'Text'
                  GitRepoId: '1'
                  ID: '2'
  /servicetickets:
    description: List all servicetickets within the current permissions scope.
    get:
      tags:
        - ServiceTickets
      summary: List ServiceTickets
      security:
        - oAuth2ClientCredentials:
          - read:servicetickets
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTickets'
              example:
                - AddDate: "2022-12-07T05:10:28"
                  Assignee: "testing@securityuniversal.com"
                  Description: "Order entry fails when selecting supplier."
                  ID: 1
                  ReleaseID: 1
                  Reporter: ""
                  Source: "JIRA"
                  SourceID: 10025
                  Status: "To Do"
                  TicketName: "VRS-6"
  /add_servicetickets:
    description: Add new servicetickets in bulk or as a single entity.
    post:
      tags:
        - ServiceTickets
      summary: Add ServiceTickets
      security:
        - oAuth2ClientCredentials:
          - write:servicetickets
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AddDate:
                  type: string
                  format: date-time
                  description: The AddDate for the servicetickets.
                ReleaseID:
                  type: integer
                  format: int32
                  description: The ReleaseID for the servicetickets.
                TicketName:
                  type: string
                  description: The TicketName for the servicetickets.
                Description:
                  type: string
                  description: The Description for the servicetickets.
                Source:
                  type: string
                  description: The Source for the servicetickets.
                SourceID:
                  type: integer
                  format: int32
                  description: The SourceID for the servicetickets.
                Reporter:
                  type: string
                  description: The Reporter for the servicetickets.
                Assignee:
                  type: string
                  description: The Assignee for the servicetickets.
                Status:
                  type: string
                  description: The Status for the servicetickets.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the servicetickets.
              example:
                ID: 16
  /delete_servicetickets:
    description: Delete the ServiceTickets that match the property filters.
    post:
      tags:
        - ServiceTickets
      summary: Delete ServiceTickets
      security:
        - oAuth2ClientCredentials:
          - write:servicetickets
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTickets'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_servicetickets:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - ServiceTickets
      summary: Edit ServiceTickets
      security:
        - oAuth2ClientCredentials:
          - write:servicetickets
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/ServiceTickets'
                values:
                  $ref: '#/components/schemas/ServiceTickets'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited ServiceTickets.
              example:
                ID: 5
  /search_servicetickets:
    description: Search for servicetickets that match the properties filter(s).
    post:
      tags:
        - ServiceTickets
      summary: Search ServiceTickets
      security:
        - oAuth2ClientCredentials:
          - read:servicetickets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTickets'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTickets'
              example:
                - AddDate: '2023-01-22T01:24:07'
                  Assignee: 'testing@securityuniversal.com'
                  Description: 'Order entry fails when selecting supplier.'
                  ID: '72'
                  ReleaseID: '1'
                  Reporter: 'None'
                  Source: 'JIRA'
                  SourceID: '10025'
                  Status: 'To Do'
                  TicketName: 'VRS-600'
  /releaseversions:
    description: List all releaseversions within the current permissions scope.
    get:
      tags:
        - ReleaseVersions
      summary: List ReleaseVersions
      security:
        - oAuth2ClientCredentials:
          - read:releaseversions
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseVersions'
              example:
                - AddDate: "2022-12-07T05:10:25"
                  ApplicationID: 4
                  Description: "Fixes

VRS-6 - Test Ticket 3: Order entry fails when selecting supplier.

"
                  ID: 1
                  ReleaseDate: "2022-12-01T00:00:00"
                  ReleaseName: "12-2022"
                  Released: ""
                  RetireDate: ""
                  Source: "JIRA"
                  SourceID: 10000
                  Status: ""
  /add_releaseversions:
    description: Add new releaseversions in bulk or as a single entity.
    post:
      tags:
        - ReleaseVersions
      summary: Add ReleaseVersions
      security:
        - oAuth2ClientCredentials:
          - write:releaseversions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AddDate:
                  type: string
                  format: date-time
                  description: The AddDate for the releaseversions.
                ApplicationID:
                  type: integer
                  format: int32
                  description: The ApplicationID for the releaseversions.
                ReleaseName:
                  type: string
                  description: The ReleaseName for the releaseversions.
                ReleaseDate:
                  type: string
                  format: date-time
                  description: The ReleaseDate for the releaseversions.
                Description:
                  type: string
                  description: The Description for the releaseversions.
                Source:
                  type: string
                  description: The Source for the releaseversions.
                SourceID:
                  type: integer
                  format: int32
                  description: The SourceID for the releaseversions.
                Released:
                  type: string
                  description: The Released for the releaseversions.
                Status:
                  type: string
                  description: The Status for the releaseversions.
                RetireDate:
                  type: string
                  format: date-time
                  description: The RetireDate for the releaseversions.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the releaseversions.
              example:
                ID: 16
  /delete_releaseversions:
    description: Delete the ReleaseVersions that match the property filters.
    post:
      tags:
        - ReleaseVersions
      summary: Delete ReleaseVersions
      security:
        - oAuth2ClientCredentials:
          - write:releaseversions
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseVersions'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_releaseversions:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - ReleaseVersions
      summary: Edit ReleaseVersions
      security:
        - oAuth2ClientCredentials:
          - write:releaseversions
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/ReleaseVersions'
                values:
                  $ref: '#/components/schemas/ReleaseVersions'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited ReleaseVersions.
              example:
                ID: 5
  /search_releaseversions:
    description: Search for releaseversions that match the properties filter(s).
    post:
      tags:
        - ReleaseVersions
      summary: Search ReleaseVersions
      security:
        - oAuth2ClientCredentials:
          - read:releaseversions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseVersions'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseVersions'
              example:
                - AddDate: '2023-01-22T01:11:14'
                  ApplicationID: '4'
                  Description: 'Fixes

VRS-6 - Test Ticket 3: Order entry fails when selecting supplier.

'
                  ID: '2'
                  ReleaseDate: '2022-12-01T00:00:00'
                  ReleaseName: '01-2022'
                  Released: 'None'
                  RetireDate: 'None'
                  Source: 'JIRA'
                  SourceID: '10000'
                  Status: 'None'
  /pullrequests:
    description: List all pullrequests within the current permissions scope.
    get:
      tags:
        - PullRequests
      summary: List PullRequests
      security:
        - oAuth2ClientCredentials:
          - read:pullrequests
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 01:51:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequests'
              example:
                - AddDate: "2023-01-21T12:00:00"
                  Approvers: "brian.kaiser"
                  Description: "This is a test pull request"
                  ID: 1
                  Name: "Test Pull Request"
                  ReleaseID: 1
                  Reporter: "brian.kaiser"
                  Source: "GitHub"
                  SourceID: 1
                  Status: "Submitted"
  /add_pullrequests:
    description: Add new pullrequests in bulk or as a single entity.
    post:
      tags:
        - PullRequests
      summary: Add PullRequests
      security:
        - oAuth2ClientCredentials:
          - write:pullrequests
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                AddDate:
                  type: string
                  format: date-time
                  description: The AddDate for the pullrequests.
                ReleaseID:
                  type: integer
                  format: int32
                  description: The ReleaseID for the pullrequests.
                Name:
                  type: string
                  description: The Name for the pullrequests.
                Description:
                  type: string
                  description: The Description for the pullrequests.
                Source:
                  type: string
                  description: The Source for the pullrequests.
                SourceID:
                  type: integer
                  format: int32
                  description: The SourceID for the pullrequests.
                Reporter:
                  type: string
                  description: The Reporter for the pullrequests.
                Approvers:
                  type: string
                  description: The Approvers for the pullrequests.
                Status:
                  type: string
                  description: The Status for the pullrequests.
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Wed, 09 Nov 2022 02:23:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the pullrequests.
              example:
                ID: 16
  /delete_pullrequests:
    description: Delete the PullRequests that match the property filters.
    post:
      tags:
        - PullRequests
      summary: Delete PullRequests
      security:
        - oAuth2ClientCredentials:
          - write:pullrequests
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the deleted entities must match all property filters.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequests'
            examples:
              success:
                value: {
                    "ID": "3"
                }
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Sat, 21 Jan 2023 17:02:09 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  Status:
                    type: string
              example:
                Status: Deleted
  /edit_pullrequests:
    description: Edit the properties that match the filter properties with values provided.
    post:
      tags:
        - PullRequests
      summary: Edit PullRequests
      security:
        - oAuth2ClientCredentials:
          - write:pullrequests
      requestBody:
        description: All properties are optional.  If multiple properties are provided, the edited entities must match all property filters.
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
                - values
              properties:
                filter:
                  $ref: '#/components/schemas/PullRequests'
                values:
                  $ref: '#/components/schemas/PullRequests'

      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 01:01:36 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '14'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int32
                    description: The unique ID of the edited PullRequests.
              example:
                ID: 5
  /search_pullrequests:
    description: Search for pullrequests that match the properties filter(s).
    post:
      tags:
        - PullRequests
      summary: Search PullRequests
      security:
        - oAuth2ClientCredentials:
          - read:pullrequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequests'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: Werkzeug/2.1.2 Python/3.9.13
            Date:
              schema:
                type: string
                example: Thu, 10 Nov 2022 02:29:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '968'
            Connection:
              schema:
                type: string
                example: close
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequests'
              example:
                - AddDate: '2023-01-21T12:00:00'
                  Approvers: 'brian.kaiser'
                  Description: 'This is a test pull request'
                  ID: '1'
                  Name: 'Test Pull Request'
                  ReleaseID: '1'
                  Reporter: 'brian.kaiser'
                  Source: 'GitHub'
                  SourceID: '1'
                  Status: 'Submitted'
                - AddDate: '2023-01-22T00:57:34'
                  Approvers: 'brian.kaiser'
                  Description: 'This is a test pull request'
                  ID: '2'
                  Name: 'Test Pull Request'
                  ReleaseID: '1'
                  Reporter: 'brian.kaiser'
                  Source: 'GitHub'
                  SourceID: '1'
                  Status: 'Submitted'
