from vr import db, app
from marshmallow import Schema, fields
from marshmallow import post_load


class VulnerabilityUpdates(db.Model):
    __table_args__ = {'extend_existing': True}
    __tablename__ = 'VulnerabilityUpdates'
    ID = db.Column(db.Integer, primary_key=True)
    UpdateStartDate = db.Column(db.DateTime, index=True)
    UpdateEndDate = db.Column(db.DateTime, index=True)
    NewCveCnt = db.Column(db.Integer)
    UpdatedCveCnt = db.Column(db.Integer)
    ScanEndDate = db.Column(db.DateTime, index=True)

    def __init__(self, **kwargs):
        self.__dict__.update(kwargs)

    def __repr__(self):
        return '<VulnerabilityUpdates(name={self.UpdateStartDate!r})>'.format(self=self)


class VulnerabilityUpdatesSchema(Schema):
    ID = fields.Int()
    UpdateStartDate = fields.DateTime()
    UpdateEndDate = fields.DateTime()
    NewCveCnt = fields.Int()
    UpdatedCveCnt = fields.Int()
    ScanEndDate = fields.DateTime()


class MakeVulnerabilityUpdatesSchema(VulnerabilityUpdatesSchema):
    @post_load
    def make_it(self, data, **kwargs):
        return VulnerabilityUpdates(**data)



